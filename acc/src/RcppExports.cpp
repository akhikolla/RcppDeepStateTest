// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// estep
NumericMatrix estep(NumericMatrix A, NumericVector L);
RcppExport SEXP acc_estep(SEXP ASEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type L(LSEXP);
    __result = Rcpp::wrap(estep(A, L));
    return __result;
END_RCPP
}
// estepAEE
NumericMatrix estepAEE(NumericMatrix A, NumericVector L, double a);
RcppExport SEXP acc_estepAEE(SEXP ASEXP, SEXP LSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    __result = Rcpp::wrap(estepAEE(A, L, a));
    return __result;
END_RCPP
}
// makePanelMatrix
NumericMatrix makePanelMatrix(NumericVector T, NumericVector M, NumericVector UID, NumericVector TGD, NumericVector C);
RcppExport SEXP acc_makePanelMatrix(SEXP TSEXP, SEXP MSEXP, SEXP UIDSEXP, SEXP TGDSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type M(MSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type UID(UIDSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type TGD(TGDSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type C(CSEXP);
    __result = Rcpp::wrap(makePanelMatrix(T, M, UID, TGD, C));
    return __result;
END_RCPP
}
// matrixInverse
arma::mat matrixInverse(arma::mat S);
RcppExport SEXP acc_matrixInverse(SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    __result = Rcpp::wrap(matrixInverse(S));
    return __result;
END_RCPP
}
// rollSumCpp
NumericVector rollSumCpp(NumericVector x, int n);
RcppExport SEXP acc_rollSumCpp(SEXP xSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(rollSumCpp(x, n));
    return __result;
END_RCPP
}
