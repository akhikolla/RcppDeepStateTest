==13297== Memcheck, a memory error detector
==13297== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13297== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13297== Command: ./perlin_2d_c_DeepState_TestHarness --fuzz --fuzz_save_passing --output_test_dir /home/akhila/Documents/compileAttributescheck/ambient/inst/testfiles/perlin_2d_c/perlin_2d_c_output
==13297== 
INFO: Starting fuzzing
WARNING: No seed provided; using 1597730550
WARNING: No test specified, defaulting to first test defined (ambient_deepstate_test_perlin_2d_c_test)
height values: 2010066672
width values: 616864349
seed values: -1124383942
freq values: 5.54819e+191
interp values: -1110361679
fractal values: 97672841
octaves values: -29464715
lacunarity values: 5.0626e-200
gain values: 1.02011e+110
pertube values: -662389355
pertube_amp values: -2.08888e+38
input ends
EXTERNAL: Error: vector is too large

EXTERNAL: Execution halted

==13298== 
==13298== HEAP SUMMARY:
==13298==     in use at exit: 50,292,293 bytes in 9,714 blocks
==13298==   total heap usage: 27,818 allocs, 18,104 frees, 86,076,705 bytes allocated
==13298== 
==13298== 8 bytes in 1 blocks are definitely lost in loss record 10 of 1,307
==13298==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13298==    by 0x40E786: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==13298==    by 0x40E72B: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==13298==    by 0x40E6D2: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==13298==    by 0x40E60E: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==13298==    by 0x40E4B4: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==13298==    by 0x40E3E6: std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) (stl_vector.h:284)
==13298==    by 0x40E13F: Rcpp::Dimension::Dimension(unsigned long const&, unsigned long const&) (Dimension.h:45)
==13298==    by 0x40CC67: Rcpp::Matrix<14, Rcpp::PreserveStorage>::Matrix(int const&, int const&) (Matrix.h:59)
==13298==    by 0x439EE7: perlin_2d_c(int, int, int, double, int, int, int, double, double, int, double) (perlin.cpp:25)
==13298==    by 0x40995A: DeepState_Test_ambient_deepstate_test_perlin_2d_c_test() (perlin_2d_c_DeepState_TestHarness.cpp:77)
==13298==    by 0x408E18: DeepState_Run_ambient_deepstate_test_perlin_2d_c_test() (perlin_2d_c_DeepState_TestHarness.cpp:7)
==13298== 
==13298== LEAK SUMMARY:
==13298==    definitely lost: 8 bytes in 1 blocks
==13298==    indirectly lost: 0 bytes in 0 blocks
==13298==      possibly lost: 0 bytes in 0 blocks
==13298==    still reachable: 50,292,285 bytes in 9,713 blocks
==13298==                       of which reachable via heuristic:
==13298==                         newarray           : 4,264 bytes in 1 blocks
==13298==         suppressed: 0 bytes in 0 blocks
==13298== Reachable blocks (those to which a pointer was found) are not shown.
==13298== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13298== 
==13298== For counts of detected and suppressed errors, rerun with: -v
==13298== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
height values: 1790177893
width values: 1941551774
seed values: -109978670
freq values: 6.81305e-155
interp values: 1937584560
fractal values: 1333492451
octaves values: 111679856
lacunarity values: -8.40191e-13
gain values: -4.92208e+212
pertube values: -1627124974
pertube_amp values: -1.20623e-06
input ends
EXTERNAL: Error: vector is too large

EXTERNAL: Execution halted

==13303== 
==13303== HEAP SUMMARY:
==13303==     in use at exit: 50,292,293 bytes in 9,714 blocks
==13303==   total heap usage: 27,818 allocs, 18,104 frees, 86,076,705 bytes allocated
==13303== 
==13303== 8 bytes in 1 blocks are definitely lost in loss record 10 of 1,307
==13303==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13303==    by 0x40E786: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==13303==    by 0x40E72B: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==13303==    by 0x40E6D2: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==13303==    by 0x40E60E: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==13303==    by 0x40E4B4: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==13303==    by 0x40E3E6: std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) (stl_vector.h:284)
==13303==    by 0x40E13F: Rcpp::Dimension::Dimension(unsigned long const&, unsigned long const&) (Dimension.h:45)
==13303==    by 0x40CC67: Rcpp::Matrix<14, Rcpp::PreserveStorage>::Matrix(int const&, int const&) (Matrix.h:59)
==13303==    by 0x439EE7: perlin_2d_c(int, int, int, double, int, int, int, double, double, int, double) (perlin.cpp:25)
==13303==    by 0x40995A: DeepState_Test_ambient_deepstate_test_perlin_2d_c_test() (perlin_2d_c_DeepState_TestHarness.cpp:77)
==13303==    by 0x408E18: DeepState_Run_ambient_deepstate_test_perlin_2d_c_test() (perlin_2d_c_DeepState_TestHarness.cpp:7)
==13303== 
==13303== LEAK SUMMARY:
==13303==    definitely lost: 8 bytes in 1 blocks
==13303==    indirectly lost: 0 bytes in 0 blocks
==13303==      possibly lost: 0 bytes in 0 blocks
==13303==    still reachable: 50,292,285 bytes in 9,713 blocks
==13303==                       of which reachable via heuristic:
==13303==                         newarray           : 4,264 bytes in 1 blocks
==13303==         suppressed: 0 bytes in 0 blocks
==13303== Reachable blocks (those to which a pointer was found) are not shown.
==13303== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13303== 
==13303== For counts of detected and suppressed errors, rerun with: -v
==13303== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
INFO: Done fuzzing! Ran 2 tests (0 tests/second) with 2 failed/0 passed/0 abandoned tests
==13297== 
==13297== HEAP SUMMARY:
==13297==     in use at exit: 8 bytes in 1 blocks
==13297==   total heap usage: 4 allocs, 3 frees, 106,568 bytes allocated
==13297== 
==13297== LEAK SUMMARY:
==13297==    definitely lost: 0 bytes in 0 blocks
==13297==    indirectly lost: 0 bytes in 0 blocks
==13297==      possibly lost: 0 bytes in 0 blocks
==13297==    still reachable: 8 bytes in 1 blocks
==13297==         suppressed: 0 bytes in 0 blocks
==13297== Reachable blocks (those to which a pointer was found) are not shown.
==13297== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13297== 
==13297== For counts of detected and suppressed errors, rerun with: -v
==13297== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
