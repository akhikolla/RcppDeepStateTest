==13416== Memcheck, a memory error detector
==13416== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13416== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13416== Command: ./simplex_2d_c_DeepState_TestHarness --fuzz --fuzz_save_passing --output_test_dir /home/akhila/Documents/compileAttributescheck/ambient/inst/testfiles/simplex_2d_c/simplex_2d_c_output
==13416== 
INFO: Starting fuzzing
WARNING: No seed provided; using 1597731345
WARNING: No test specified, defaulting to first test defined (ambient_deepstate_test_simplex_2d_c_test)
height values: -274918660
width values: 367113890
seed values: 1781645414
freq values: 2.00973e-100
fractal values: -590246951
octaves values: -1760489137
lacunarity values: -3.19384e+218
gain values: -2.21751e-257
pertube values: 1407362654
pertube_amp values: 6.39501e+56
input ends
EXTERNAL: Error: negative length vectors are not allowed

EXTERNAL: Execution halted

==13417== 
==13417== HEAP SUMMARY:
==13417==     in use at exit: 50,292,293 bytes in 9,714 blocks
==13417==   total heap usage: 27,816 allocs, 18,102 frees, 86,067,961 bytes allocated
==13417== 
==13417== 8 bytes in 1 blocks are definitely lost in loss record 10 of 1,307
==13417==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13417==    by 0x40E666: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==13417==    by 0x40E60B: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==13417==    by 0x40E5B2: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==13417==    by 0x40E4EE: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==13417==    by 0x40E394: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==13417==    by 0x40E2C6: std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) (stl_vector.h:284)
==13417==    by 0x40E01F: Rcpp::Dimension::Dimension(unsigned long const&, unsigned long const&) (Dimension.h:45)
==13417==    by 0x40CB47: Rcpp::Matrix<14, Rcpp::PreserveStorage>::Matrix(int const&, int const&) (Matrix.h:59)
==13417==    by 0x43A9EC: simplex_2d_c(int, int, int, double, int, int, double, double, int, double) (simplex.cpp:23)
==13417==    by 0x40985F: DeepState_Test_ambient_deepstate_test_simplex_2d_c_test() (simplex_2d_c_DeepState_TestHarness.cpp:71)
==13417==    by 0x408E18: DeepState_Run_ambient_deepstate_test_simplex_2d_c_test() (simplex_2d_c_DeepState_TestHarness.cpp:7)
==13417== 
==13417== LEAK SUMMARY:
==13417==    definitely lost: 8 bytes in 1 blocks
==13417==    indirectly lost: 0 bytes in 0 blocks
==13417==      possibly lost: 0 bytes in 0 blocks
==13417==    still reachable: 50,292,285 bytes in 9,713 blocks
==13417==                       of which reachable via heuristic:
==13417==                         newarray           : 4,264 bytes in 1 blocks
==13417==         suppressed: 0 bytes in 0 blocks
==13417== Reachable blocks (those to which a pointer was found) are not shown.
==13417== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13417== 
==13417== For counts of detected and suppressed errors, rerun with: -v
==13417== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
height values: 674676423
width values: 1131214468
seed values: 1149116505
freq values: 5.21827e+267
fractal values: -1892500998
octaves values: -2136713562
lacunarity values: 1.13061e+227
gain values: -0.000130312
pertube values: -1497104297
pertube_amp values: 5.15284e-46
input ends
EXTERNAL: Error: vector is too large

EXTERNAL: Execution halted

==13422== 
==13422== HEAP SUMMARY:
==13422==     in use at exit: 50,292,293 bytes in 9,714 blocks
==13422==   total heap usage: 27,816 allocs, 18,102 frees, 86,067,961 bytes allocated
==13422== 
==13422== 8 bytes in 1 blocks are definitely lost in loss record 10 of 1,307
==13422==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13422==    by 0x40E666: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==13422==    by 0x40E60B: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==13422==    by 0x40E5B2: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==13422==    by 0x40E4EE: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==13422==    by 0x40E394: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==13422==    by 0x40E2C6: std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) (stl_vector.h:284)
==13422==    by 0x40E01F: Rcpp::Dimension::Dimension(unsigned long const&, unsigned long const&) (Dimension.h:45)
==13422==    by 0x40CB47: Rcpp::Matrix<14, Rcpp::PreserveStorage>::Matrix(int const&, int const&) (Matrix.h:59)
==13422==    by 0x43A9EC: simplex_2d_c(int, int, int, double, int, int, double, double, int, double) (simplex.cpp:23)
==13422==    by 0x40985F: DeepState_Test_ambient_deepstate_test_simplex_2d_c_test() (simplex_2d_c_DeepState_TestHarness.cpp:71)
==13422==    by 0x408E18: DeepState_Run_ambient_deepstate_test_simplex_2d_c_test() (simplex_2d_c_DeepState_TestHarness.cpp:7)
==13422== 
==13422== LEAK SUMMARY:
==13422==    definitely lost: 8 bytes in 1 blocks
==13422==    indirectly lost: 0 bytes in 0 blocks
==13422==      possibly lost: 0 bytes in 0 blocks
==13422==    still reachable: 50,292,285 bytes in 9,713 blocks
==13422==                       of which reachable via heuristic:
==13422==                         newarray           : 4,264 bytes in 1 blocks
==13422==         suppressed: 0 bytes in 0 blocks
==13422== Reachable blocks (those to which a pointer was found) are not shown.
==13422== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13422== 
==13422== For counts of detected and suppressed errors, rerun with: -v
==13422== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
INFO: Done fuzzing! Ran 2 tests (0 tests/second) with 2 failed/0 passed/0 abandoned tests
==13416== 
==13416== HEAP SUMMARY:
==13416==     in use at exit: 8 bytes in 1 blocks
==13416==   total heap usage: 4 allocs, 3 frees, 106,568 bytes allocated
==13416== 
==13416== LEAK SUMMARY:
==13416==    definitely lost: 0 bytes in 0 blocks
==13416==    indirectly lost: 0 bytes in 0 blocks
==13416==      possibly lost: 0 bytes in 0 blocks
==13416==    still reachable: 8 bytes in 1 blocks
==13416==         suppressed: 0 bytes in 0 blocks
==13416== Reachable blocks (those to which a pointer was found) are not shown.
==13416== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13416== 
==13416== For counts of detected and suppressed errors, rerun with: -v
==13416== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
