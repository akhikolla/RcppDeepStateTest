==13041== Memcheck, a memory error detector
==13041== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13041== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13041== Command: ./cubic_2d_c_DeepState_TestHarness --fuzz --fuzz_save_passing --output_test_dir /home/akhila/Documents/compileAttributescheck/ambient/inst/testfiles/cubic_2d_c/cubic_2d_c_output
==13041== 
INFO: Starting fuzzing
WARNING: No seed provided; using 1597729598
WARNING: No test specified, defaulting to first test defined (ambient_deepstate_test_cubic_2d_c_test)
height values: 1479560744
width values: -2129204894
seed values: 1707637612
freq values: 8.56028e+97
fractal values: 1261203845
octaves values: -1969080572
lacunarity values: -5.17927e-74
gain values: 6.68481e-259
pertube values: 983166211
pertube_amp values: -1.44412e+195
input ends
EXTERNAL: Error: negative length vectors are not allowed

EXTERNAL: Execution halted

==13042== 
==13042== HEAP SUMMARY:
==13042==     in use at exit: 50,292,293 bytes in 9,714 blocks
==13042==   total heap usage: 27,816 allocs, 18,102 frees, 86,067,961 bytes allocated
==13042== 
==13042== 8 bytes in 1 blocks are definitely lost in loss record 10 of 1,307
==13042==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13042==    by 0x40E666: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==13042==    by 0x40E60B: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==13042==    by 0x40E5B2: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==13042==    by 0x40E4EE: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==13042==    by 0x40E394: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==13042==    by 0x40E2C6: std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) (stl_vector.h:284)
==13042==    by 0x40E01F: Rcpp::Dimension::Dimension(unsigned long const&, unsigned long const&) (Dimension.h:45)
==13042==    by 0x40CB47: Rcpp::Matrix<14, Rcpp::PreserveStorage>::Matrix(int const&, int const&) (Matrix.h:59)
==13042==    by 0x4387BC: cubic_2d_c(int, int, int, double, int, int, double, double, int, double) (cubic.cpp:23)
==13042==    by 0x40985F: DeepState_Test_ambient_deepstate_test_cubic_2d_c_test() (cubic_2d_c_DeepState_TestHarness.cpp:71)
==13042==    by 0x408E18: DeepState_Run_ambient_deepstate_test_cubic_2d_c_test() (cubic_2d_c_DeepState_TestHarness.cpp:7)
==13042== 
==13042== LEAK SUMMARY:
==13042==    definitely lost: 8 bytes in 1 blocks
==13042==    indirectly lost: 0 bytes in 0 blocks
==13042==      possibly lost: 0 bytes in 0 blocks
==13042==    still reachable: 50,292,285 bytes in 9,713 blocks
==13042==                       of which reachable via heuristic:
==13042==                         newarray           : 4,264 bytes in 1 blocks
==13042==         suppressed: 0 bytes in 0 blocks
==13042== Reachable blocks (those to which a pointer was found) are not shown.
==13042== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13042== 
==13042== For counts of detected and suppressed errors, rerun with: -v
==13042== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
height values: 1646303263
width values: -383217077
seed values: 354860414
freq values: -5.30602e+101
fractal values: -1137194681
octaves values: 762366003
lacunarity values: 2.63766e-37
gain values: -5.33077e+169
pertube values: 592958454
pertube_amp values: 4.57766e+27
input ends
EXTERNAL: Error: negative length vectors are not allowed

EXTERNAL: Execution halted

==13047== 
==13047== HEAP SUMMARY:
==13047==     in use at exit: 50,292,293 bytes in 9,714 blocks
==13047==   total heap usage: 27,816 allocs, 18,102 frees, 86,067,961 bytes allocated
==13047== 
==13047== 8 bytes in 1 blocks are definitely lost in loss record 10 of 1,307
==13047==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13047==    by 0x40E666: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==13047==    by 0x40E60B: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==13047==    by 0x40E5B2: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==13047==    by 0x40E4EE: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==13047==    by 0x40E394: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==13047==    by 0x40E2C6: std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) (stl_vector.h:284)
==13047==    by 0x40E01F: Rcpp::Dimension::Dimension(unsigned long const&, unsigned long const&) (Dimension.h:45)
==13047==    by 0x40CB47: Rcpp::Matrix<14, Rcpp::PreserveStorage>::Matrix(int const&, int const&) (Matrix.h:59)
==13047==    by 0x4387BC: cubic_2d_c(int, int, int, double, int, int, double, double, int, double) (cubic.cpp:23)
==13047==    by 0x40985F: DeepState_Test_ambient_deepstate_test_cubic_2d_c_test() (cubic_2d_c_DeepState_TestHarness.cpp:71)
==13047==    by 0x408E18: DeepState_Run_ambient_deepstate_test_cubic_2d_c_test() (cubic_2d_c_DeepState_TestHarness.cpp:7)
==13047== 
==13047== LEAK SUMMARY:
==13047==    definitely lost: 8 bytes in 1 blocks
==13047==    indirectly lost: 0 bytes in 0 blocks
==13047==      possibly lost: 0 bytes in 0 blocks
==13047==    still reachable: 50,292,285 bytes in 9,713 blocks
==13047==                       of which reachable via heuristic:
==13047==                         newarray           : 4,264 bytes in 1 blocks
==13047==         suppressed: 0 bytes in 0 blocks
==13047== Reachable blocks (those to which a pointer was found) are not shown.
==13047== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13047== 
==13047== For counts of detected and suppressed errors, rerun with: -v
==13047== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
INFO: Done fuzzing! Ran 2 tests (0 tests/second) with 2 failed/0 passed/0 abandoned tests
==13041== 
==13041== HEAP SUMMARY:
==13041==     in use at exit: 8 bytes in 1 blocks
==13041==   total heap usage: 4 allocs, 3 frees, 106,568 bytes allocated
==13041== 
==13041== LEAK SUMMARY:
==13041==    definitely lost: 0 bytes in 0 blocks
==13041==    indirectly lost: 0 bytes in 0 blocks
==13041==      possibly lost: 0 bytes in 0 blocks
==13041==    still reachable: 8 bytes in 1 blocks
==13041==         suppressed: 0 bytes in 0 blocks
==13041== Reachable blocks (those to which a pointer was found) are not shown.
==13041== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13041== 
==13041== For counts of detected and suppressed errors, rerun with: -v
==13041== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
