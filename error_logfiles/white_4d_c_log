==13774== Memcheck, a memory error detector
==13774== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13774== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13774== Command: ./white_4d_c_DeepState_TestHarness --fuzz --fuzz_save_passing --output_test_dir /home/akhila/Documents/compileAttributescheck/ambient/inst/testfiles/white_4d_c/white_4d_c_output
==13774== 
INFO: Starting fuzzing
WARNING: No seed provided; using 1597733730
WARNING: No test specified, defaulting to first test defined (ambient_deepstate_test_white_4d_c_test)
height values: 1726960399
width values: -1878508
depth values: 667224804
time values: 2134451535
seed values: -67295331
freq values: -1.1054e-210
pertube values: -809143243
pertube_amp values: -6.26595e+90
input ends
EXTERNAL: Error: vector is too large

EXTERNAL: Execution halted

==13775== 
==13775== HEAP SUMMARY:
==13775==     in use at exit: 50,292,293 bytes in 9,714 blocks
==13775==   total heap usage: 27,812 allocs, 18,098 frees, 86,050,473 bytes allocated
==13775== 
==13775== 8 bytes in 1 blocks are definitely lost in loss record 10 of 1,307
==13775==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13775==    by 0x40E406: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==13775==    by 0x40E3AB: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==13775==    by 0x40E352: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==13775==    by 0x40E28E: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==13775==    by 0x40E134: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==13775==    by 0x40E066: std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) (stl_vector.h:284)
==13775==    by 0x40DDBF: Rcpp::Dimension::Dimension(unsigned long const&, unsigned long const&) (Dimension.h:45)
==13775==    by 0x40C8E7: Rcpp::Matrix<14, Rcpp::PreserveStorage>::Matrix(int const&, int const&) (Matrix.h:59)
==13775==    by 0x43C8A4: white_4d_c(int, int, int, int, int, double, int, double) (white.cpp:65)
==13775==    by 0x40965B: DeepState_Test_ambient_deepstate_test_white_4d_c_test() (white_4d_c_DeepState_TestHarness.cpp:59)
==13775==    by 0x408E18: DeepState_Run_ambient_deepstate_test_white_4d_c_test() (white_4d_c_DeepState_TestHarness.cpp:7)
==13775== 
==13775== LEAK SUMMARY:
==13775==    definitely lost: 8 bytes in 1 blocks
==13775==    indirectly lost: 0 bytes in 0 blocks
==13775==      possibly lost: 0 bytes in 0 blocks
==13775==    still reachable: 50,292,285 bytes in 9,713 blocks
==13775==                       of which reachable via heuristic:
==13775==                         newarray           : 4,264 bytes in 1 blocks
==13775==         suppressed: 0 bytes in 0 blocks
==13775== Reachable blocks (those to which a pointer was found) are not shown.
==13775== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13775== 
==13775== For counts of detected and suppressed errors, rerun with: -v
==13775== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
height values: -916777592
width values: 351951966
depth values: 1692035320
time values: 728706038
seed values: -950495731
freq values: -9.07899e-289
pertube values: -2068585907
pertube_amp values: 7.70427e+103
input ends
EXTERNAL: Error: vector is too large

EXTERNAL: Execution halted

==13780== 
==13780== HEAP SUMMARY:
==13780==     in use at exit: 50,292,293 bytes in 9,714 blocks
==13780==   total heap usage: 27,812 allocs, 18,098 frees, 86,050,473 bytes allocated
==13780== 
==13780== 8 bytes in 1 blocks are definitely lost in loss record 10 of 1,307
==13780==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13780==    by 0x40E406: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==13780==    by 0x40E3AB: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==13780==    by 0x40E352: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==13780==    by 0x40E28E: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==13780==    by 0x40E134: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==13780==    by 0x40E066: std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) (stl_vector.h:284)
==13780==    by 0x40DDBF: Rcpp::Dimension::Dimension(unsigned long const&, unsigned long const&) (Dimension.h:45)
==13780==    by 0x40C8E7: Rcpp::Matrix<14, Rcpp::PreserveStorage>::Matrix(int const&, int const&) (Matrix.h:59)
==13780==    by 0x43C8A4: white_4d_c(int, int, int, int, int, double, int, double) (white.cpp:65)
==13780==    by 0x40965B: DeepState_Test_ambient_deepstate_test_white_4d_c_test() (white_4d_c_DeepState_TestHarness.cpp:59)
==13780==    by 0x408E18: DeepState_Run_ambient_deepstate_test_white_4d_c_test() (white_4d_c_DeepState_TestHarness.cpp:7)
==13780== 
==13780== LEAK SUMMARY:
==13780==    definitely lost: 8 bytes in 1 blocks
==13780==    indirectly lost: 0 bytes in 0 blocks
==13780==      possibly lost: 0 bytes in 0 blocks
==13780==    still reachable: 50,292,285 bytes in 9,713 blocks
==13780==                       of which reachable via heuristic:
==13780==                         newarray           : 4,264 bytes in 1 blocks
==13780==         suppressed: 0 bytes in 0 blocks
==13780== Reachable blocks (those to which a pointer was found) are not shown.
==13780== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13780== 
==13780== For counts of detected and suppressed errors, rerun with: -v
==13780== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
INFO: Done fuzzing! Ran 2 tests (0 tests/second) with 2 failed/0 passed/0 abandoned tests
==13774== 
==13774== HEAP SUMMARY:
==13774==     in use at exit: 8 bytes in 1 blocks
==13774==   total heap usage: 4 allocs, 3 frees, 106,568 bytes allocated
==13774== 
==13774== LEAK SUMMARY:
==13774==    definitely lost: 0 bytes in 0 blocks
==13774==    indirectly lost: 0 bytes in 0 blocks
==13774==      possibly lost: 0 bytes in 0 blocks
==13774==    still reachable: 8 bytes in 1 blocks
==13774==         suppressed: 0 bytes in 0 blocks
==13774== Reachable blocks (those to which a pointer was found) are not shown.
==13774== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==13774== 
==13774== For counts of detected and suppressed errors, rerun with: -v
==13774== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
