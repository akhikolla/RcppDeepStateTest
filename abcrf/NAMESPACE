import(ranger)
import(MASS)
import(parallel)
import(doParallel)
import(foreach)
import(matrixStats)
importFrom(readr, "read_file")
importFrom(stringr, "str_extract", "str_extract_all", "str_match", "str_match_all")
importFrom(grDevices, "rainbow", "dev.off")
importFrom(graphics, "legend", "lines", "par", "plot", "abline", "points","dotchart")
importFrom(stats, "density", "model.frame", "model.response","predict", "reformulate", "terms")
importFrom(utils, "head", "tail", "setTxtProgressBar", "txtProgressBar")
importFrom(Rcpp, evalCpp)
export(abcrf)
export(err.abcrf)
export(err.regAbcrf)
export(regAbcrf)
export(covRegAbcrf)
export(predictOOB)
export(densityPlot)
export(variableImpPlot)
export(readRefTable)
S3method(abcrf, formula)
S3method(abcrf, default)
S3method(plot, abcrf)
S3method(print, abcrf)
S3method(predict, abcrf)
S3method(summary, abcrfpredict)
S3method(print, abcrfpredict)
S3method(as.matrix, abcrfpredict)
S3method(as.data.frame, abcrfpredict)
S3method(as.list, abcrfpredict)
S3method(regAbcrf, formula)
S3method(predict, regAbcrf)
S3method(predictOOB, regAbcrf)
S3method(plot, regAbcrf)
S3method(covRegAbcrf, regAbcrf)
S3method(print, regAbcrf)
S3method(print, regAbcrfpredict)
S3method(print, regAbcrfOOBpredict)
S3method(as.matrix, regAbcrfpredict)
S3method(as.data.frame, regAbcrfpredict)
S3method(as.list, regAbcrfpredict)
S3method(as.list, regAbcrfOOBpredict)
S3method(densityPlot, regAbcrf)
useDynLib(abcrf, .registration = TRUE)