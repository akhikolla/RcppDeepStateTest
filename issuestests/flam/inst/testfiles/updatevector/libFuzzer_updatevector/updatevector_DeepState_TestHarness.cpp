// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// updatevector_DeepState_TestHarness_generation.cpp and updatevector_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

void updatevector(NumericVector vector, NumericVector update, int length);

TEST(flam_deepstate_test,updatevector_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector vector  = RcppDeepState_NumericVector();
  std::string vector_t = "/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatevector/libFuzzer_updatevector/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vector.qs";
  qs::c_qsave(vector,vector_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vector values: "<< vector << std::endl;
  NumericVector update  = RcppDeepState_NumericVector();
  std::string update_t = "/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatevector/libFuzzer_updatevector/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_update.qs";
  qs::c_qsave(update,update_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "update values: "<< update << std::endl;
  IntegerVector length(1);
  length[0]  = RcppDeepState_int();
  std::string length_t = "/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatevector/libFuzzer_updatevector/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_length.qs";
  qs::c_qsave(length,length_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "length values: "<< length << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    updatevector(vector,update,length[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
