// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// updatecolumn_DeepState_TestHarness_generation.cpp and updatecolumn_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

void updatecolumn(NumericMatrix thetamat, NumericVector column, int colnum, int nrow);

TEST(flam_deepstate_test,updatecolumn_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix thetamat  = RcppDeepState_NumericMatrix();
  std::string thetamat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatecolumn/libFuzzer_updatecolumn/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_thetamat.qs";
  qs::c_qsave(thetamat,thetamat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "thetamat values: "<< thetamat << std::endl;
  NumericVector column  = RcppDeepState_NumericVector();
  std::string column_t = "/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatecolumn/libFuzzer_updatecolumn/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_column.qs";
  qs::c_qsave(column,column_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "column values: "<< column << std::endl;
  IntegerVector colnum(1);
  colnum[0]  = RcppDeepState_int();
  std::string colnum_t = "/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatecolumn/libFuzzer_updatecolumn/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_colnum.qs";
  qs::c_qsave(colnum,colnum_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "colnum values: "<< colnum << std::endl;
  IntegerVector nrow(1);
  nrow[0]  = RcppDeepState_int();
  std::string nrow_t = "/home/akhila/fuzzer_packages/fuzzedpackages/flam/inst/testfiles/updatecolumn/libFuzzer_updatecolumn/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nrow.qs";
  qs::c_qsave(nrow,nrow_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nrow values: "<< nrow << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    updatecolumn(thetamat,column,colnum[0],nrow[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
