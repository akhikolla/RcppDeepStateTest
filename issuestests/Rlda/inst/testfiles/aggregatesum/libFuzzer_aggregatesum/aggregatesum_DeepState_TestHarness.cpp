// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// aggregatesum_DeepState_TestHarness_generation.cpp and aggregatesum_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector aggregatesum(NumericVector Tobesum, int nind, int nobs, IntegerVector ind);

TEST(Rlda_deepstate_test,aggregatesum_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector Tobesum  = RcppDeepState_NumericVector();
  std::string Tobesum_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Rlda/inst/testfiles/aggregatesum/libFuzzer_aggregatesum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Tobesum.qs";
  qs::c_qsave(Tobesum,Tobesum_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Tobesum values: "<< Tobesum << std::endl;
  IntegerVector nind(1);
  nind[0]  = RcppDeepState_int();
  std::string nind_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Rlda/inst/testfiles/aggregatesum/libFuzzer_aggregatesum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nind.qs";
  qs::c_qsave(nind,nind_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nind values: "<< nind << std::endl;
  IntegerVector nobs(1);
  nobs[0]  = RcppDeepState_int();
  std::string nobs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Rlda/inst/testfiles/aggregatesum/libFuzzer_aggregatesum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nobs.qs";
  qs::c_qsave(nobs,nobs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nobs values: "<< nobs << std::endl;
  IntegerVector ind  = RcppDeepState_IntegerVector();
  std::string ind_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Rlda/inst/testfiles/aggregatesum/libFuzzer_aggregatesum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ind.qs";
  qs::c_qsave(ind,ind_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ind values: "<< ind << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    aggregatesum(Tobesum,nind[0],nobs[0],ind);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
