// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// updatePPLCpp_DeepState_TestHarness_generation.cpp and updatePPLCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix updatePPLCpp(NumericMatrix x, NumericMatrix dm, int idx);

TEST(spsann_deepstate_test,updatePPLCpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix x  = RcppDeepState_NumericMatrix();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updatePPLCpp/AFL_updatePPLCpp/afl_inputs/" + std::to_string(t) + "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericMatrix dm  = RcppDeepState_NumericMatrix();
  std::string dm_t = "/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updatePPLCpp/AFL_updatePPLCpp/afl_inputs/" + std::to_string(t) + "_dm.qs";
  qs::c_qsave(dm,dm_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dm values: "<< dm << std::endl;
  IntegerVector idx(1);
  idx[0]  = RcppDeepState_int();
  std::string idx_t = "/home/akhila/fuzzer_packages/fuzzedpackages/spsann/inst/testfiles/updatePPLCpp/AFL_updatePPLCpp/afl_inputs/" + std::to_string(t) + "_idx.qs";
  qs::c_qsave(idx,idx_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "idx values: "<< idx << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    updatePPLCpp(x,dm,idx[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
