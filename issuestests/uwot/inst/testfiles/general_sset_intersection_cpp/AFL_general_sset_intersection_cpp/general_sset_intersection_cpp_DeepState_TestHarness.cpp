// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// general_sset_intersection_cpp_DeepState_TestHarness_generation.cpp and general_sset_intersection_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector general_sset_intersection_cpp(IntegerVector indptr1, IntegerVector indices1, NumericVector data1, IntegerVector indptr2, IntegerVector indices2, NumericVector data2, IntegerVector result_row, IntegerVector result_col, NumericVector result_val, double mix_weight);

TEST(uwot_deepstate_test,general_sset_intersection_cpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector indptr1  = RcppDeepState_IntegerVector();
  std::string indptr1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_indptr1.qs";
  qs::c_qsave(indptr1,indptr1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "indptr1 values: "<< indptr1 << std::endl;
  IntegerVector indices1  = RcppDeepState_IntegerVector();
  std::string indices1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_indices1.qs";
  qs::c_qsave(indices1,indices1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "indices1 values: "<< indices1 << std::endl;
  NumericVector data1  = RcppDeepState_NumericVector();
  std::string data1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_data1.qs";
  qs::c_qsave(data1,data1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "data1 values: "<< data1 << std::endl;
  IntegerVector indptr2  = RcppDeepState_IntegerVector();
  std::string indptr2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_indptr2.qs";
  qs::c_qsave(indptr2,indptr2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "indptr2 values: "<< indptr2 << std::endl;
  IntegerVector indices2  = RcppDeepState_IntegerVector();
  std::string indices2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_indices2.qs";
  qs::c_qsave(indices2,indices2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "indices2 values: "<< indices2 << std::endl;
  NumericVector data2  = RcppDeepState_NumericVector();
  std::string data2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_data2.qs";
  qs::c_qsave(data2,data2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "data2 values: "<< data2 << std::endl;
  IntegerVector result_row  = RcppDeepState_IntegerVector();
  std::string result_row_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_result_row.qs";
  qs::c_qsave(result_row,result_row_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "result_row values: "<< result_row << std::endl;
  IntegerVector result_col  = RcppDeepState_IntegerVector();
  std::string result_col_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_result_col.qs";
  qs::c_qsave(result_col,result_col_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "result_col values: "<< result_col << std::endl;
  NumericVector result_val  = RcppDeepState_NumericVector();
  std::string result_val_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_result_val.qs";
  qs::c_qsave(result_val,result_val_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "result_val values: "<< result_val << std::endl;
  NumericVector mix_weight(1);
  mix_weight[0]  = RcppDeepState_double();
  std::string mix_weight_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/general_sset_intersection_cpp/AFL_general_sset_intersection_cpp/afl_inputs/" + std::to_string(t) + "_mix_weight.qs";
  qs::c_qsave(mix_weight,mix_weight_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mix_weight values: "<< mix_weight << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    general_sset_intersection_cpp(indptr1,indices1,data1,indptr2,indices2,data2,result_row,result_col,result_val,mix_weight[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
