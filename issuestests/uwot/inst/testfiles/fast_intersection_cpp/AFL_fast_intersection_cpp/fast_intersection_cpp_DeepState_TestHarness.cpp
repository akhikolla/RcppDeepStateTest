// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fast_intersection_cpp_DeepState_TestHarness_generation.cpp and fast_intersection_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector fast_intersection_cpp(IntegerVector rows, IntegerVector cols, NumericVector values, IntegerVector target, double unknown_dist, double far_dist);

TEST(uwot_deepstate_test,fast_intersection_cpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector rows  = RcppDeepState_IntegerVector();
  std::string rows_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/fast_intersection_cpp/AFL_fast_intersection_cpp/afl_inputs/" + std::to_string(t) + "_rows.qs";
  qs::c_qsave(rows,rows_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rows values: "<< rows << std::endl;
  IntegerVector cols  = RcppDeepState_IntegerVector();
  std::string cols_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/fast_intersection_cpp/AFL_fast_intersection_cpp/afl_inputs/" + std::to_string(t) + "_cols.qs";
  qs::c_qsave(cols,cols_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cols values: "<< cols << std::endl;
  NumericVector values  = RcppDeepState_NumericVector();
  std::string values_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/fast_intersection_cpp/AFL_fast_intersection_cpp/afl_inputs/" + std::to_string(t) + "_values.qs";
  qs::c_qsave(values,values_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "values values: "<< values << std::endl;
  IntegerVector target  = RcppDeepState_IntegerVector();
  std::string target_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/fast_intersection_cpp/AFL_fast_intersection_cpp/afl_inputs/" + std::to_string(t) + "_target.qs";
  qs::c_qsave(target,target_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "target values: "<< target << std::endl;
  NumericVector unknown_dist(1);
  unknown_dist[0]  = RcppDeepState_double();
  std::string unknown_dist_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/fast_intersection_cpp/AFL_fast_intersection_cpp/afl_inputs/" + std::to_string(t) + "_unknown_dist.qs";
  qs::c_qsave(unknown_dist,unknown_dist_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "unknown_dist values: "<< unknown_dist << std::endl;
  NumericVector far_dist(1);
  far_dist[0]  = RcppDeepState_double();
  std::string far_dist_t = "/home/akhila/fuzzer_packages/fuzzedpackages/uwot/inst/testfiles/fast_intersection_cpp/AFL_fast_intersection_cpp/afl_inputs/" + std::to_string(t) + "_far_dist.qs";
  qs::c_qsave(far_dist,far_dist_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "far_dist values: "<< far_dist << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fast_intersection_cpp(rows,cols,values,target,unknown_dist[0],far_dist[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
