// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// hazard_DeepState_TestHarness_generation.cpp and hazard_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List hazard(NumericVector y1, NumericVector y2, NumericVector lev, NumericVector wt);

TEST(DStree_deepstate_test,hazard_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector y1  = RcppDeepState_NumericVector();
  std::string y1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DStree/inst/testfiles/hazard/AFL_hazard/afl_inputs/" + std::to_string(t) + "_y1.qs";
  qs::c_qsave(y1,y1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y1 values: "<< y1 << std::endl;
  NumericVector y2  = RcppDeepState_NumericVector();
  std::string y2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DStree/inst/testfiles/hazard/AFL_hazard/afl_inputs/" + std::to_string(t) + "_y2.qs";
  qs::c_qsave(y2,y2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y2 values: "<< y2 << std::endl;
  NumericVector lev  = RcppDeepState_NumericVector();
  std::string lev_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DStree/inst/testfiles/hazard/AFL_hazard/afl_inputs/" + std::to_string(t) + "_lev.qs";
  qs::c_qsave(lev,lev_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lev values: "<< lev << std::endl;
  NumericVector wt  = RcppDeepState_NumericVector();
  std::string wt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/DStree/inst/testfiles/hazard/AFL_hazard/afl_inputs/" + std::to_string(t) + "_wt.qs";
  qs::c_qsave(wt,wt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "wt values: "<< wt << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    hazard(y1,y2,lev,wt);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
