// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rcpp_create_new_weight_vector_DeepState_TestHarness_generation.cpp and rcpp_create_new_weight_vector_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector rcpp_create_new_weight_vector(NumericMatrix vic, int loci);

TEST(disclapmix_deepstate_test,rcpp_create_new_weight_vector_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix vic  = RcppDeepState_NumericMatrix();
  std::string vic_t = "/home/akhila/fuzzer_packages/fuzzedpackages/disclapmix/inst/testfiles/rcpp_create_new_weight_vector/libFuzzer_rcpp_create_new_weight_vector/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vic.qs";
  qs::c_qsave(vic,vic_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vic values: "<< vic << std::endl;
  IntegerVector loci(1);
  loci[0]  = RcppDeepState_int();
  std::string loci_t = "/home/akhila/fuzzer_packages/fuzzedpackages/disclapmix/inst/testfiles/rcpp_create_new_weight_vector/libFuzzer_rcpp_create_new_weight_vector/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_loci.qs";
  qs::c_qsave(loci,loci_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "loci values: "<< loci << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rcpp_create_new_weight_vector(vic,loci[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
