// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// np_m3_py_DeepState_TestHarness_generation.cpp and np_m3_py_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List np_m3_py(int NZ, int NP, NumericMatrix W);

TEST(bmotif_deepstate_test,np_m3_py_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector NZ(1);
  NZ[0]  = RcppDeepState_int();
  std::string NZ_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bmotif/inst/testfiles/np_m3_py/AFL_np_m3_py/afl_inputs/" + std::to_string(t) + "_NZ.qs";
  qs::c_qsave(NZ,NZ_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NZ values: "<< NZ << std::endl;
  IntegerVector NP(1);
  NP[0]  = RcppDeepState_int();
  std::string NP_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bmotif/inst/testfiles/np_m3_py/AFL_np_m3_py/afl_inputs/" + std::to_string(t) + "_NP.qs";
  qs::c_qsave(NP,NP_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "NP values: "<< NP << std::endl;
  NumericMatrix W  = RcppDeepState_NumericMatrix();
  std::string W_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bmotif/inst/testfiles/np_m3_py/AFL_np_m3_py/afl_inputs/" + std::to_string(t) + "_W.qs";
  qs::c_qsave(W,W_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "W values: "<< W << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    np_m3_py(NZ[0],NP[0],W);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
