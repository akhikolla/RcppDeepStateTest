// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// match_ij_DeepState_TestHarness_generation.cpp and match_ij_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector match_ij(IntegerVector ix, IntegerVector jx, IntegerVector ti, IntegerVector tj);

TEST(multbxxc_deepstate_test,match_ij_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector ix  = RcppDeepState_IntegerVector();
  std::string ix_t = "/home/akhila/fuzzer_packages/fuzzedpackages/multbxxc/inst/testfiles/match_ij/AFL_match_ij/afl_inputs/" + std::to_string(t) + "_ix.qs";
  qs::c_qsave(ix,ix_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ix values: "<< ix << std::endl;
  IntegerVector jx  = RcppDeepState_IntegerVector();
  std::string jx_t = "/home/akhila/fuzzer_packages/fuzzedpackages/multbxxc/inst/testfiles/match_ij/AFL_match_ij/afl_inputs/" + std::to_string(t) + "_jx.qs";
  qs::c_qsave(jx,jx_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jx values: "<< jx << std::endl;
  IntegerVector ti  = RcppDeepState_IntegerVector();
  std::string ti_t = "/home/akhila/fuzzer_packages/fuzzedpackages/multbxxc/inst/testfiles/match_ij/AFL_match_ij/afl_inputs/" + std::to_string(t) + "_ti.qs";
  qs::c_qsave(ti,ti_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ti values: "<< ti << std::endl;
  IntegerVector tj  = RcppDeepState_IntegerVector();
  std::string tj_t = "/home/akhila/fuzzer_packages/fuzzedpackages/multbxxc/inst/testfiles/match_ij/AFL_match_ij/afl_inputs/" + std::to_string(t) + "_tj.qs";
  qs::c_qsave(tj,tj_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tj values: "<< tj << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    match_ij(ix,jx,ti,tj);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
