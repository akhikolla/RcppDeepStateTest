// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// pcf_envelope_DeepState_TestHarness_generation.cpp and pcf_envelope_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::DataFrame pcf_envelope(Rcpp::NumericVector sim, Rcpp::NumericVector dist, Rcpp::NumericVector ratio, Rcpp::NumericVector rs, double area, int nobj, double stoyan, int nrank);

TEST(apcf_deepstate_test,pcf_envelope_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector sim  = RcppDeepState_NumericVector();
  std::string sim_t = "/home/akhila/fuzzer_packages/fuzzedpackages/apcf/inst/testfiles/pcf_envelope/libFuzzer_pcf_envelope/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sim.qs";
  qs::c_qsave(sim,sim_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sim values: "<< sim << std::endl;
  NumericVector dist  = RcppDeepState_NumericVector();
  std::string dist_t = "/home/akhila/fuzzer_packages/fuzzedpackages/apcf/inst/testfiles/pcf_envelope/libFuzzer_pcf_envelope/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_dist.qs";
  qs::c_qsave(dist,dist_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dist values: "<< dist << std::endl;
  NumericVector ratio  = RcppDeepState_NumericVector();
  std::string ratio_t = "/home/akhila/fuzzer_packages/fuzzedpackages/apcf/inst/testfiles/pcf_envelope/libFuzzer_pcf_envelope/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ratio.qs";
  qs::c_qsave(ratio,ratio_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ratio values: "<< ratio << std::endl;
  NumericVector rs  = RcppDeepState_NumericVector();
  std::string rs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/apcf/inst/testfiles/pcf_envelope/libFuzzer_pcf_envelope/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rs.qs";
  qs::c_qsave(rs,rs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rs values: "<< rs << std::endl;
  NumericVector area(1);
  area[0]  = RcppDeepState_double();
  std::string area_t = "/home/akhila/fuzzer_packages/fuzzedpackages/apcf/inst/testfiles/pcf_envelope/libFuzzer_pcf_envelope/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_area.qs";
  qs::c_qsave(area,area_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "area values: "<< area << std::endl;
  IntegerVector nobj(1);
  nobj[0]  = RcppDeepState_int();
  std::string nobj_t = "/home/akhila/fuzzer_packages/fuzzedpackages/apcf/inst/testfiles/pcf_envelope/libFuzzer_pcf_envelope/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nobj.qs";
  qs::c_qsave(nobj,nobj_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nobj values: "<< nobj << std::endl;
  NumericVector stoyan(1);
  stoyan[0]  = RcppDeepState_double();
  std::string stoyan_t = "/home/akhila/fuzzer_packages/fuzzedpackages/apcf/inst/testfiles/pcf_envelope/libFuzzer_pcf_envelope/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_stoyan.qs";
  qs::c_qsave(stoyan,stoyan_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "stoyan values: "<< stoyan << std::endl;
  IntegerVector nrank(1);
  nrank[0]  = RcppDeepState_int();
  std::string nrank_t = "/home/akhila/fuzzer_packages/fuzzedpackages/apcf/inst/testfiles/pcf_envelope/libFuzzer_pcf_envelope/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nrank.qs";
  qs::c_qsave(nrank,nrank_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nrank values: "<< nrank << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    pcf_envelope(sim,dist,ratio,rs,area[0],nobj[0],stoyan[0],nrank[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
