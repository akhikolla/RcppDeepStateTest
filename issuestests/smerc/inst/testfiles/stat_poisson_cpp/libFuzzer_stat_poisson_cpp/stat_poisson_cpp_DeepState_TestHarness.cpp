// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// stat_poisson_cpp_DeepState_TestHarness_generation.cpp and stat_poisson_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector stat_poisson_cpp(NumericVector yin, NumericVector yout, NumericVector ein, NumericVector eout, double a, NumericVector shape);

TEST(smerc_deepstate_test,stat_poisson_cpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector yin  = RcppDeepState_NumericVector();
  std::string yin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/libFuzzer_stat_poisson_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_yin.qs";
  qs::c_qsave(yin,yin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yin values: "<< yin << std::endl;
  NumericVector yout  = RcppDeepState_NumericVector();
  std::string yout_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/libFuzzer_stat_poisson_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_yout.qs";
  qs::c_qsave(yout,yout_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yout values: "<< yout << std::endl;
  NumericVector ein  = RcppDeepState_NumericVector();
  std::string ein_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/libFuzzer_stat_poisson_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ein.qs";
  qs::c_qsave(ein,ein_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ein values: "<< ein << std::endl;
  NumericVector eout  = RcppDeepState_NumericVector();
  std::string eout_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/libFuzzer_stat_poisson_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_eout.qs";
  qs::c_qsave(eout,eout_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "eout values: "<< eout << std::endl;
  NumericVector a(1);
  a[0]  = RcppDeepState_double();
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/libFuzzer_stat_poisson_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(a,a_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector shape  = RcppDeepState_NumericVector();
  std::string shape_t = "/home/akhila/fuzzer_packages/fuzzedpackages/smerc/inst/testfiles/stat_poisson_cpp/libFuzzer_stat_poisson_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_shape.qs";
  qs::c_qsave(shape,shape_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "shape values: "<< shape << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    stat_poisson_cpp(yin,yout,ein,eout,a[0],shape);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
