// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// funcResVar_DeepState_TestHarness_generation.cpp and funcResVar_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix funcResVar(NumericMatrix yMat, NumericMatrix seMat, NumericVector tmpVar);

TEST(unsystation_deepstate_test,funcResVar_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix yMat  = RcppDeepState_NumericMatrix();
  std::string yMat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcResVar/libFuzzer_funcResVar/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_yMat.qs";
  qs::c_qsave(yMat,yMat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yMat values: "<< yMat << std::endl;
  NumericMatrix seMat  = RcppDeepState_NumericMatrix();
  std::string seMat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcResVar/libFuzzer_funcResVar/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_seMat.qs";
  qs::c_qsave(seMat,seMat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "seMat values: "<< seMat << std::endl;
  NumericVector tmpVar  = RcppDeepState_NumericVector();
  std::string tmpVar_t = "/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcResVar/libFuzzer_funcResVar/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tmpVar.qs";
  qs::c_qsave(tmpVar,tmpVar_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tmpVar values: "<< tmpVar << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    funcResVar(yMat,seMat,tmpVar);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
