// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// funcApplyVar_DeepState_TestHarness_generation.cpp and funcApplyVar_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix funcApplyVar(NumericMatrix nullStatMat, int maxLevel, int Msq);

TEST(unsystation_deepstate_test,funcApplyVar_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix nullStatMat  = RcppDeepState_NumericMatrix();
  std::string nullStatMat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcApplyVar/libFuzzer_funcApplyVar/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nullStatMat.qs";
  qs::c_qsave(nullStatMat,nullStatMat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nullStatMat values: "<< nullStatMat << std::endl;
  IntegerVector maxLevel(1);
  maxLevel[0]  = RcppDeepState_int();
  std::string maxLevel_t = "/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcApplyVar/libFuzzer_funcApplyVar/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_maxLevel.qs";
  qs::c_qsave(maxLevel,maxLevel_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxLevel values: "<< maxLevel << std::endl;
  IntegerVector Msq(1);
  Msq[0]  = RcppDeepState_int();
  std::string Msq_t = "/home/akhila/fuzzer_packages/fuzzedpackages/unsystation/inst/testfiles/funcApplyVar/libFuzzer_funcApplyVar/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Msq.qs";
  qs::c_qsave(Msq,Msq_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Msq values: "<< Msq << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    funcApplyVar(nullStatMat,maxLevel[0],Msq[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
