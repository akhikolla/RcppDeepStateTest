// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// get_orbital_elements_DeepState_TestHarness_generation.cpp and get_orbital_elements_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List get_orbital_elements(double jd_et, int ipl, int iflag);

TEST(swephR_deepstate_test,get_orbital_elements_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector jd_et(1);
  jd_et[0]  = RcppDeepState_double();
  std::string jd_et_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/get_orbital_elements/libFuzzer_get_orbital_elements/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_jd_et.qs";
  qs::c_qsave(jd_et,jd_et_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jd_et values: "<< jd_et << std::endl;
  IntegerVector ipl(1);
  ipl[0]  = RcppDeepState_int();
  std::string ipl_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/get_orbital_elements/libFuzzer_get_orbital_elements/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ipl.qs";
  qs::c_qsave(ipl,ipl_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ipl values: "<< ipl << std::endl;
  IntegerVector iflag(1);
  iflag[0]  = RcppDeepState_int();
  std::string iflag_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/get_orbital_elements/libFuzzer_get_orbital_elements/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_iflag.qs";
  qs::c_qsave(iflag,iflag_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "iflag values: "<< iflag << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    get_orbital_elements(jd_et[0],ipl[0],iflag[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
