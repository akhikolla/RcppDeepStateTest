// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// azalt_DeepState_TestHarness_generation.cpp and azalt_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List azalt(double jd_ut, int coord_flag, Rcpp::NumericVector geopos, double atpress, double attemp, Rcpp::NumericVector xin);

TEST(swephR_deepstate_test,azalt_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector jd_ut(1);
  jd_ut[0]  = RcppDeepState_double();
  std::string jd_ut_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/azalt/libFuzzer_azalt/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_jd_ut.qs";
  qs::c_qsave(jd_ut,jd_ut_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "jd_ut values: "<< jd_ut << std::endl;
  IntegerVector coord_flag(1);
  coord_flag[0]  = RcppDeepState_int();
  std::string coord_flag_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/azalt/libFuzzer_azalt/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_coord_flag.qs";
  qs::c_qsave(coord_flag,coord_flag_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "coord_flag values: "<< coord_flag << std::endl;
  NumericVector geopos  = RcppDeepState_NumericVector();
  std::string geopos_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/azalt/libFuzzer_azalt/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_geopos.qs";
  qs::c_qsave(geopos,geopos_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "geopos values: "<< geopos << std::endl;
  NumericVector atpress(1);
  atpress[0]  = RcppDeepState_double();
  std::string atpress_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/azalt/libFuzzer_azalt/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_atpress.qs";
  qs::c_qsave(atpress,atpress_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "atpress values: "<< atpress << std::endl;
  NumericVector attemp(1);
  attemp[0]  = RcppDeepState_double();
  std::string attemp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/azalt/libFuzzer_azalt/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_attemp.qs";
  qs::c_qsave(attemp,attemp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "attemp values: "<< attemp << std::endl;
  NumericVector xin  = RcppDeepState_NumericVector();
  std::string xin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/swephR/inst/testfiles/azalt/libFuzzer_azalt/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xin.qs";
  qs::c_qsave(xin,xin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xin values: "<< xin << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    azalt(jd_ut[0],coord_flag[0],geopos,atpress[0],attemp[0],xin);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
