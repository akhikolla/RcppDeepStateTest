// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_lag_obs_DeepState_TestHarness_generation.cpp and cpp_lag_obs_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector cpp_lag_obs(IntegerVector id, IntegerVector time, int nlag);

TEST(fixest_deepstate_test,cpp_lag_obs_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector id  = RcppDeepState_IntegerVector();
  std::string id_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fixest/inst/testfiles/cpp_lag_obs/AFL_cpp_lag_obs/afl_inputs/" + std::to_string(t) + "_id.qs";
  qs::c_qsave(id,id_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "id values: "<< id << std::endl;
  IntegerVector time  = RcppDeepState_IntegerVector();
  std::string time_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fixest/inst/testfiles/cpp_lag_obs/AFL_cpp_lag_obs/afl_inputs/" + std::to_string(t) + "_time.qs";
  qs::c_qsave(time,time_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time values: "<< time << std::endl;
  IntegerVector nlag(1);
  nlag[0]  = RcppDeepState_int();
  std::string nlag_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fixest/inst/testfiles/cpp_lag_obs/AFL_cpp_lag_obs/afl_inputs/" + std::to_string(t) + "_nlag.qs";
  qs::c_qsave(nlag,nlag_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nlag values: "<< nlag << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_lag_obs(id,time,nlag[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
