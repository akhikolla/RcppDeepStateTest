// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// get_n_cells_DeepState_TestHarness_generation.cpp and get_n_cells_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

int get_n_cells(IntegerVector index_i, IntegerVector index_j);

TEST(fixest_deepstate_test,get_n_cells_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector index_i  = RcppDeepState_IntegerVector();
  std::string index_i_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fixest/inst/testfiles/get_n_cells/libFuzzer_get_n_cells/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_index_i.qs";
  qs::c_qsave(index_i,index_i_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "index_i values: "<< index_i << std::endl;
  IntegerVector index_j  = RcppDeepState_IntegerVector();
  std::string index_j_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fixest/inst/testfiles/get_n_cells/libFuzzer_get_n_cells/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_index_j.qs";
  qs::c_qsave(index_j,index_j_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "index_j values: "<< index_j << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    get_n_cells(index_i,index_j);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
