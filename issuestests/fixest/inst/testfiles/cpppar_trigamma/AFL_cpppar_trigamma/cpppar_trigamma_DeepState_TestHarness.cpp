// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpppar_trigamma_DeepState_TestHarness_generation.cpp and cpppar_trigamma_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector cpppar_trigamma(NumericVector x, int nthreads);

TEST(fixest_deepstate_test,cpppar_trigamma_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fixest/inst/testfiles/cpppar_trigamma/AFL_cpppar_trigamma/afl_inputs/" + std::to_string(t) + "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector nthreads(1);
  nthreads[0]  = RcppDeepState_int();
  std::string nthreads_t = "/home/akhila/fuzzer_packages/fuzzedpackages/fixest/inst/testfiles/cpppar_trigamma/AFL_cpppar_trigamma/afl_inputs/" + std::to_string(t) + "_nthreads.qs";
  qs::c_qsave(nthreads,nthreads_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nthreads values: "<< nthreads << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpppar_trigamma(x,nthreads[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
