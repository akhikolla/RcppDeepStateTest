// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// weightedMean_DeepState_TestHarness_generation.cpp and weightedMean_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector weightedMean(NumericMatrix particles, NumericVector log_weights);

TEST(serrsBayes_deepstate_test,weightedMean_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix particles  = RcppDeepState_NumericMatrix();
  std::string particles_t = "/home/akhila/fuzzer_packages/fuzzedpackages/serrsBayes/inst/testfiles/weightedMean/libFuzzer_weightedMean/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_particles.qs";
  qs::c_qsave(particles,particles_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "particles values: "<< particles << std::endl;
  NumericVector log_weights  = RcppDeepState_NumericVector();
  std::string log_weights_t = "/home/akhila/fuzzer_packages/fuzzedpackages/serrsBayes/inst/testfiles/weightedMean/libFuzzer_weightedMean/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_log_weights.qs";
  qs::c_qsave(log_weights,log_weights_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "log_weights values: "<< log_weights << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    weightedMean(particles,log_weights);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
