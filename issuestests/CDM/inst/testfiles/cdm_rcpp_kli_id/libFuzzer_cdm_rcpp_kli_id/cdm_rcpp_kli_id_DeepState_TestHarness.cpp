// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cdm_rcpp_kli_id_DeepState_TestHarness_generation.cpp and cdm_rcpp_kli_id_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List cdm_rcpp_kli_id(Rcpp::NumericMatrix pjk, Rcpp::NumericMatrix sc);

TEST(CDM_deepstate_test,cdm_rcpp_kli_id_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix pjk  = RcppDeepState_NumericMatrix();
  std::string pjk_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CDM/inst/testfiles/cdm_rcpp_kli_id/libFuzzer_cdm_rcpp_kli_id/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pjk.qs";
  qs::c_qsave(pjk,pjk_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pjk values: "<< pjk << std::endl;
  NumericMatrix sc  = RcppDeepState_NumericMatrix();
  std::string sc_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CDM/inst/testfiles/cdm_rcpp_kli_id/libFuzzer_cdm_rcpp_kli_id/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sc.qs";
  qs::c_qsave(sc,sc_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sc values: "<< sc << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cdm_rcpp_kli_id(pjk,sc);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
