// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cdm_rcpp_ideal_resp_pattern_DeepState_TestHarness_generation.cpp and cdm_rcpp_ideal_resp_pattern_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericMatrix cdm_rcpp_ideal_resp_pattern(Rcpp::NumericMatrix qmatrix, Rcpp::NumericMatrix skillspace);

TEST(CDM_deepstate_test,cdm_rcpp_ideal_resp_pattern_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix qmatrix  = RcppDeepState_NumericMatrix();
  std::string qmatrix_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CDM/inst/testfiles/cdm_rcpp_ideal_resp_pattern/libFuzzer_cdm_rcpp_ideal_resp_pattern/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_qmatrix.qs";
  qs::c_qsave(qmatrix,qmatrix_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "qmatrix values: "<< qmatrix << std::endl;
  NumericMatrix skillspace  = RcppDeepState_NumericMatrix();
  std::string skillspace_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CDM/inst/testfiles/cdm_rcpp_ideal_resp_pattern/libFuzzer_cdm_rcpp_ideal_resp_pattern/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_skillspace.qs";
  qs::c_qsave(skillspace,skillspace_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "skillspace values: "<< skillspace << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cdm_rcpp_ideal_resp_pattern(qmatrix,skillspace);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
