// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cdm_rcpp_discrimination_index_idi_DeepState_TestHarness_generation.cpp and cdm_rcpp_discrimination_index_idi_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector cdm_rcpp_discrimination_index_idi(Rcpp::NumericVector probs, Rcpp::NumericVector dim_probs, int K);

TEST(CDM_deepstate_test,cdm_rcpp_discrimination_index_idi_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector probs  = RcppDeepState_NumericVector();
  std::string probs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CDM/inst/testfiles/cdm_rcpp_discrimination_index_idi/AFL_cdm_rcpp_discrimination_index_idi/afl_inputs/" + std::to_string(t) + "_probs.qs";
  qs::c_qsave(probs,probs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probs values: "<< probs << std::endl;
  NumericVector dim_probs  = RcppDeepState_NumericVector();
  std::string dim_probs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CDM/inst/testfiles/cdm_rcpp_discrimination_index_idi/AFL_cdm_rcpp_discrimination_index_idi/afl_inputs/" + std::to_string(t) + "_dim_probs.qs";
  qs::c_qsave(dim_probs,dim_probs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dim_probs values: "<< dim_probs << std::endl;
  IntegerVector K(1);
  K[0]  = RcppDeepState_int();
  std::string K_t = "/home/akhila/fuzzer_packages/fuzzedpackages/CDM/inst/testfiles/cdm_rcpp_discrimination_index_idi/AFL_cdm_rcpp_discrimination_index_idi/afl_inputs/" + std::to_string(t) + "_K.qs";
  qs::c_qsave(K,K_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "K values: "<< K << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cdm_rcpp_discrimination_index_idi(probs,dim_probs,K[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
