// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// colsum_index_DeepState_TestHarness_generation.cpp and colsum_index_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector colsum_index(NumericMatrix X, IntegerVector indexes);

TEST(xyz_deepstate_test,colsum_index_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix X  = RcppDeepState_NumericMatrix();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/xyz/inst/testfiles/colsum_index/libFuzzer_colsum_index/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  IntegerVector indexes  = RcppDeepState_IntegerVector();
  std::string indexes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/xyz/inst/testfiles/colsum_index/libFuzzer_colsum_index/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_indexes.qs";
  qs::c_qsave(indexes,indexes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "indexes values: "<< indexes << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    colsum_index(X,indexes);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
