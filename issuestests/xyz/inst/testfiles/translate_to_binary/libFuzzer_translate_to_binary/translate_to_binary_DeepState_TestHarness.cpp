// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// translate_to_binary_DeepState_TestHarness_generation.cpp and translate_to_binary_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerMatrix translate_to_binary(NumericMatrix X, int max_number_of_iterations);

TEST(xyz_deepstate_test,translate_to_binary_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix X  = RcppDeepState_NumericMatrix();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/xyz/inst/testfiles/translate_to_binary/libFuzzer_translate_to_binary/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  IntegerVector max_number_of_iterations(1);
  max_number_of_iterations[0]  = RcppDeepState_int();
  std::string max_number_of_iterations_t = "/home/akhila/fuzzer_packages/fuzzedpackages/xyz/inst/testfiles/translate_to_binary/libFuzzer_translate_to_binary/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_max_number_of_iterations.qs";
  qs::c_qsave(max_number_of_iterations,max_number_of_iterations_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max_number_of_iterations values: "<< max_number_of_iterations << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    translate_to_binary(X,max_number_of_iterations[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
