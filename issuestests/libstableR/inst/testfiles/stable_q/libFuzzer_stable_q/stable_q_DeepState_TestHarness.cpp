// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// stable_q_DeepState_TestHarness_generation.cpp and stable_q_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector stable_q(NumericVector p, NumericVector pars, int parametrization, double tol);

TEST(libstableR_deepstate_test,stable_q_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector p  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/libstableR/inst/testfiles/stable_q/libFuzzer_stable_q/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  qs::c_qsave(p,p_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "p values: "<< p << std::endl;
  NumericVector pars  = RcppDeepState_NumericVector();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/libstableR/inst/testfiles/stable_q/libFuzzer_stable_q/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  std::string pars_t = "/home/akhila/fuzzer_packages/fuzzedpackages/libstableR/inst/testfiles/stable_q/libFuzzer_stable_q/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pars.qs";
  qs::c_qsave(pars,pars_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pars values: "<< pars << std::endl;
  IntegerVector parametrization(1);
  parametrization[0]  = RcppDeepState_int();
  std::string p_t = "/home/akhila/fuzzer_packages/fuzzedpackages/libstableR/inst/testfiles/stable_q/libFuzzer_stable_q/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_p.qs";
  std::string parametrization_t = "/home/akhila/fuzzer_packages/fuzzedpackages/libstableR/inst/testfiles/stable_q/libFuzzer_stable_q/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_parametrization.qs";
  qs::c_qsave(parametrization,parametrization_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parametrization values: "<< parametrization << std::endl;
  NumericVector tol(1);
  tol[0]  = RcppDeepState_double();
  std::string tol_t = "/home/akhila/fuzzer_packages/fuzzedpackages/libstableR/inst/testfiles/stable_q/libFuzzer_stable_q/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tol.qs";
  qs::c_qsave(tol,tol_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tol values: "<< tol << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    stable_q(p,pars,parametrization[0],tol[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
