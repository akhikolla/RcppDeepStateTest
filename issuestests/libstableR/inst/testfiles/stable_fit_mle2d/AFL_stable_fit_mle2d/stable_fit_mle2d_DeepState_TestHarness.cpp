// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// stable_fit_mle2d_DeepState_TestHarness_generation.cpp and stable_fit_mle2d_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector stable_fit_mle2d(NumericVector rnd, NumericVector pars_init, int parametrization);

TEST(libstableR_deepstate_test,stable_fit_mle2d_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector rnd  = RcppDeepState_NumericVector();
  std::string rnd_t = "/home/akhila/fuzzer_packages/fuzzedpackages/libstableR/inst/testfiles/stable_fit_mle2d/AFL_stable_fit_mle2d/afl_inputs/" + std::to_string(t) + "_rnd.qs";
  qs::c_qsave(rnd,rnd_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rnd values: "<< rnd << std::endl;
  NumericVector pars_init  = RcppDeepState_NumericVector();
  std::string pars_init_t = "/home/akhila/fuzzer_packages/fuzzedpackages/libstableR/inst/testfiles/stable_fit_mle2d/AFL_stable_fit_mle2d/afl_inputs/" + std::to_string(t) + "_pars_init.qs";
  qs::c_qsave(pars_init,pars_init_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pars_init values: "<< pars_init << std::endl;
  IntegerVector parametrization(1);
  parametrization[0]  = RcppDeepState_int();
  std::string parametrization_t = "/home/akhila/fuzzer_packages/fuzzedpackages/libstableR/inst/testfiles/stable_fit_mle2d/AFL_stable_fit_mle2d/afl_inputs/" + std::to_string(t) + "_parametrization.qs";
  qs::c_qsave(parametrization,parametrization_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parametrization values: "<< parametrization << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    stable_fit_mle2d(rnd,pars_init,parametrization[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
