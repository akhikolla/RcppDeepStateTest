// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_log_a_exp_DeepState_TestHarness_generation.cpp and cpp_log_a_exp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector cpp_log_a_exp(double a, NumericVector mu, NumericVector exp_mu);

TEST(FENmlm_deepstate_test,cpp_log_a_exp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector a(1);
  a[0]  = RcppDeepState_double();
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FENmlm/inst/testfiles/cpp_log_a_exp/libFuzzer_cpp_log_a_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_a.qs";
  qs::c_qsave(a,a_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector mu  = RcppDeepState_NumericVector();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FENmlm/inst/testfiles/cpp_log_a_exp/libFuzzer_cpp_log_a_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mu.qs";
  qs::c_qsave(mu,mu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector exp_mu  = RcppDeepState_NumericVector();
  std::string exp_mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FENmlm/inst/testfiles/cpp_log_a_exp/libFuzzer_cpp_log_a_exp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_exp_mu.qs";
  qs::c_qsave(exp_mu,exp_mu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "exp_mu values: "<< exp_mu << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_log_a_exp(a[0],mu,exp_mu);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
