// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// basal_metabolic_pow_DeepState_TestHarness_generation.cpp and basal_metabolic_pow_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double basal_metabolic_pow(double airframeMass, double muscleMass, int taxon, double alphaPasserines, double alphaNonPasserines, double deltaPasserines, double deltaNonPasserines);

TEST(FlyingR_deepstate_test,basal_metabolic_pow_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector airframeMass(1);
  airframeMass[0]  = RcppDeepState_double();
  std::string airframeMass_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FlyingR/inst/testfiles/basal_metabolic_pow/AFL_basal_metabolic_pow/afl_inputs/" + std::to_string(t) + "_airframeMass.qs";
  qs::c_qsave(airframeMass,airframeMass_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "airframeMass values: "<< airframeMass << std::endl;
  NumericVector muscleMass(1);
  muscleMass[0]  = RcppDeepState_double();
  std::string muscleMass_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FlyingR/inst/testfiles/basal_metabolic_pow/AFL_basal_metabolic_pow/afl_inputs/" + std::to_string(t) + "_muscleMass.qs";
  qs::c_qsave(muscleMass,muscleMass_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "muscleMass values: "<< muscleMass << std::endl;
  IntegerVector taxon(1);
  taxon[0]  = RcppDeepState_int();
  std::string taxon_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FlyingR/inst/testfiles/basal_metabolic_pow/AFL_basal_metabolic_pow/afl_inputs/" + std::to_string(t) + "_taxon.qs";
  qs::c_qsave(taxon,taxon_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "taxon values: "<< taxon << std::endl;
  NumericVector alphaPasserines(1);
  alphaPasserines[0]  = RcppDeepState_double();
  std::string alphaPasserines_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FlyingR/inst/testfiles/basal_metabolic_pow/AFL_basal_metabolic_pow/afl_inputs/" + std::to_string(t) + "_alphaPasserines.qs";
  qs::c_qsave(alphaPasserines,alphaPasserines_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alphaPasserines values: "<< alphaPasserines << std::endl;
  NumericVector alphaNonPasserines(1);
  alphaNonPasserines[0]  = RcppDeepState_double();
  std::string alphaNonPasserines_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FlyingR/inst/testfiles/basal_metabolic_pow/AFL_basal_metabolic_pow/afl_inputs/" + std::to_string(t) + "_alphaNonPasserines.qs";
  qs::c_qsave(alphaNonPasserines,alphaNonPasserines_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alphaNonPasserines values: "<< alphaNonPasserines << std::endl;
  NumericVector deltaPasserines(1);
  deltaPasserines[0]  = RcppDeepState_double();
  std::string deltaPasserines_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FlyingR/inst/testfiles/basal_metabolic_pow/AFL_basal_metabolic_pow/afl_inputs/" + std::to_string(t) + "_deltaPasserines.qs";
  qs::c_qsave(deltaPasserines,deltaPasserines_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "deltaPasserines values: "<< deltaPasserines << std::endl;
  NumericVector deltaNonPasserines(1);
  deltaNonPasserines[0]  = RcppDeepState_double();
  std::string deltaNonPasserines_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FlyingR/inst/testfiles/basal_metabolic_pow/AFL_basal_metabolic_pow/afl_inputs/" + std::to_string(t) + "_deltaNonPasserines.qs";
  qs::c_qsave(deltaNonPasserines,deltaNonPasserines_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "deltaNonPasserines values: "<< deltaNonPasserines << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    basal_metabolic_pow(airframeMass[0],muscleMass[0],taxon[0],alphaPasserines[0],alphaNonPasserines[0],deltaPasserines[0],deltaNonPasserines[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
