// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// MGTriC2_DeepState_TestHarness_generation.cpp and MGTriC2_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector MGTriC2(NumericVector t, NumericVector min, NumericVector max, NumericVector mode);

TEST(triangulr_deepstate_test,MGTriC2_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector t  = RcppDeepState_NumericVector();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/triangulr/inst/testfiles/MGTriC2/AFL_MGTriC2/afl_inputs/" + std::to_string(t) + "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector min  = RcppDeepState_NumericVector();
  std::string min_t = "/home/akhila/fuzzer_packages/fuzzedpackages/triangulr/inst/testfiles/MGTriC2/AFL_MGTriC2/afl_inputs/" + std::to_string(t) + "_min.qs";
  qs::c_qsave(min,min_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min values: "<< min << std::endl;
  NumericVector max  = RcppDeepState_NumericVector();
  std::string max_t = "/home/akhila/fuzzer_packages/fuzzedpackages/triangulr/inst/testfiles/MGTriC2/AFL_MGTriC2/afl_inputs/" + std::to_string(t) + "_max.qs";
  qs::c_qsave(max,max_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max values: "<< max << std::endl;
  NumericVector mode  = RcppDeepState_NumericVector();
  std::string mode_t = "/home/akhila/fuzzer_packages/fuzzedpackages/triangulr/inst/testfiles/MGTriC2/AFL_MGTriC2/afl_inputs/" + std::to_string(t) + "_mode.qs";
  qs::c_qsave(mode,mode_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mode values: "<< mode << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    MGTriC2(t,min,max,mode);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
