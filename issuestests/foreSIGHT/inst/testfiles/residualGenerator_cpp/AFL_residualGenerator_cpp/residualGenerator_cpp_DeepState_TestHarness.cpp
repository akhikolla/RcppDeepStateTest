// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// residualGenerator_cpp_DeepState_TestHarness_generation.cpp and residualGenerator_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector residualGenerator_cpp(NumericVector RN_res, double parCor1);

TEST(foreSIGHT_deepstate_test,residualGenerator_cpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector RN_res  = RcppDeepState_NumericVector();
  std::string RN_res_t = "/home/akhila/fuzzer_packages/fuzzedpackages/foreSIGHT/inst/testfiles/residualGenerator_cpp/AFL_residualGenerator_cpp/afl_inputs/" + std::to_string(t) + "_RN_res.qs";
  qs::c_qsave(RN_res,RN_res_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RN_res values: "<< RN_res << std::endl;
  NumericVector parCor1(1);
  parCor1[0]  = RcppDeepState_double();
  std::string parCor1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/foreSIGHT/inst/testfiles/residualGenerator_cpp/AFL_residualGenerator_cpp/afl_inputs/" + std::to_string(t) + "_parCor1.qs";
  qs::c_qsave(parCor1,parCor1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parCor1 values: "<< parCor1 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    residualGenerator_cpp(RN_res,parCor1[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
