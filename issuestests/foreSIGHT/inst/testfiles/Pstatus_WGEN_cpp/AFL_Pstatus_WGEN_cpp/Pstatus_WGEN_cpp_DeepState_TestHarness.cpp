// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Pstatus_WGEN_cpp_DeepState_TestHarness_generation.cpp and Pstatus_WGEN_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector Pstatus_WGEN_cpp(NumericVector parPwd, NumericVector parPdd, NumericVector RN, int ndays);

TEST(foreSIGHT_deepstate_test,Pstatus_WGEN_cpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector parPwd  = RcppDeepState_NumericVector();
  std::string parPwd_t = "/home/akhila/fuzzer_packages/fuzzedpackages/foreSIGHT/inst/testfiles/Pstatus_WGEN_cpp/AFL_Pstatus_WGEN_cpp/afl_inputs/" + std::to_string(t) + "_parPwd.qs";
  qs::c_qsave(parPwd,parPwd_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parPwd values: "<< parPwd << std::endl;
  NumericVector parPdd  = RcppDeepState_NumericVector();
  std::string parPdd_t = "/home/akhila/fuzzer_packages/fuzzedpackages/foreSIGHT/inst/testfiles/Pstatus_WGEN_cpp/AFL_Pstatus_WGEN_cpp/afl_inputs/" + std::to_string(t) + "_parPdd.qs";
  qs::c_qsave(parPdd,parPdd_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parPdd values: "<< parPdd << std::endl;
  NumericVector RN  = RcppDeepState_NumericVector();
  std::string RN_t = "/home/akhila/fuzzer_packages/fuzzedpackages/foreSIGHT/inst/testfiles/Pstatus_WGEN_cpp/AFL_Pstatus_WGEN_cpp/afl_inputs/" + std::to_string(t) + "_RN.qs";
  qs::c_qsave(RN,RN_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "RN values: "<< RN << std::endl;
  IntegerVector ndays(1);
  ndays[0]  = RcppDeepState_int();
  std::string ndays_t = "/home/akhila/fuzzer_packages/fuzzedpackages/foreSIGHT/inst/testfiles/Pstatus_WGEN_cpp/AFL_Pstatus_WGEN_cpp/afl_inputs/" + std::to_string(t) + "_ndays.qs";
  qs::c_qsave(ndays,ndays_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ndays values: "<< ndays << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Pstatus_WGEN_cpp(parPwd,parPdd,RN,ndays[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
