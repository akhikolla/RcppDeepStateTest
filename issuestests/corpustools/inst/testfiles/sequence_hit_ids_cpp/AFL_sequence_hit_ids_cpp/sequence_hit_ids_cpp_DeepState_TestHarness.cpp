// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sequence_hit_ids_cpp_DeepState_TestHarness_generation.cpp and sequence_hit_ids_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector sequence_hit_ids_cpp(NumericVector con, NumericVector subcon, NumericVector pos, NumericVector term_i, double length);

TEST(corpustools_deepstate_test,sequence_hit_ids_cpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector con  = RcppDeepState_NumericVector();
  std::string con_t = "/home/akhila/fuzzer_packages/fuzzedpackages/corpustools/inst/testfiles/sequence_hit_ids_cpp/AFL_sequence_hit_ids_cpp/afl_inputs/" + std::to_string(t) + "_con.qs";
  qs::c_qsave(con,con_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "con values: "<< con << std::endl;
  NumericVector subcon  = RcppDeepState_NumericVector();
  std::string subcon_t = "/home/akhila/fuzzer_packages/fuzzedpackages/corpustools/inst/testfiles/sequence_hit_ids_cpp/AFL_sequence_hit_ids_cpp/afl_inputs/" + std::to_string(t) + "_subcon.qs";
  qs::c_qsave(subcon,subcon_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "subcon values: "<< subcon << std::endl;
  NumericVector pos  = RcppDeepState_NumericVector();
  std::string pos_t = "/home/akhila/fuzzer_packages/fuzzedpackages/corpustools/inst/testfiles/sequence_hit_ids_cpp/AFL_sequence_hit_ids_cpp/afl_inputs/" + std::to_string(t) + "_pos.qs";
  qs::c_qsave(pos,pos_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pos values: "<< pos << std::endl;
  NumericVector term_i  = RcppDeepState_NumericVector();
  std::string term_i_t = "/home/akhila/fuzzer_packages/fuzzedpackages/corpustools/inst/testfiles/sequence_hit_ids_cpp/AFL_sequence_hit_ids_cpp/afl_inputs/" + std::to_string(t) + "_term_i.qs";
  qs::c_qsave(term_i,term_i_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "term_i values: "<< term_i << std::endl;
  NumericVector length(1);
  length[0]  = RcppDeepState_double();
  std::string length_t = "/home/akhila/fuzzer_packages/fuzzedpackages/corpustools/inst/testfiles/sequence_hit_ids_cpp/AFL_sequence_hit_ids_cpp/afl_inputs/" + std::to_string(t) + "_length.qs";
  qs::c_qsave(length,length_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "length values: "<< length << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sequence_hit_ids_cpp(con,subcon,pos,term_i,length[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
