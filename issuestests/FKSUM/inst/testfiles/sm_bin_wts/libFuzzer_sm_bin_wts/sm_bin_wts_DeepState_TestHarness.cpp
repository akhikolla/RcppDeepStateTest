// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sm_bin_wts_DeepState_TestHarness_generation.cpp and sm_bin_wts_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector sm_bin_wts(NumericVector x, NumericVector y, int nbin, double min, double max);

TEST(FKSUM_deepstate_test,sm_bin_wts_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/libFuzzer_sm_bin_wts/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/libFuzzer_sm_bin_wts/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  IntegerVector nbin(1);
  nbin[0]  = RcppDeepState_int();
  std::string nbin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/libFuzzer_sm_bin_wts/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nbin.qs";
  qs::c_qsave(nbin,nbin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nbin values: "<< nbin << std::endl;
  NumericVector min(1);
  min[0]  = RcppDeepState_double();
  std::string min_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/libFuzzer_sm_bin_wts/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_min.qs";
  qs::c_qsave(min,min_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "min values: "<< min << std::endl;
  NumericVector max(1);
  max[0]  = RcppDeepState_double();
  std::string max_t = "/home/akhila/fuzzer_packages/fuzzedpackages/FKSUM/inst/testfiles/sm_bin_wts/libFuzzer_sm_bin_wts/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_max.qs";
  qs::c_qsave(max,max_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "max values: "<< max << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sm_bin_wts(x,y,nbin[0],min[0],max[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
