// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// spectralIndicesCpp_DeepState_TestHarness_generation.cpp and spectralIndicesCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix spectralIndicesCpp(NumericMatrix x, CharacterVector indices, const int redBand, const int blueBand, const int greenBand, const int nirBand, const int redEdge1Band, const int redEdge2Band, const int redEdge3Band, const int swir1Band, const int swir2Band, const int swir3Band, int maskLayer, const int maskValue, const double L, const double s, const double G, const double C1, const double C2, double Levi, const double swir2ccc, const double swir2cdiff, const double sf);

TEST(RStoolbox_deepstate_test,spectralIndicesCpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix x  = RcppDeepState_NumericMatrix();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  CharacterVector indices  = RcppDeepState_CharacterVector();
  std::string indices_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_indices.qs";
  qs::c_qsave(indices,indices_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "indices values: "<< indices << std::endl;
  IntegerVector redBand(1);
  redBand[0]  = RcppDeepState_int();
  std::string redBand_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_redBand.qs";
  qs::c_qsave(redBand,redBand_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "redBand values: "<< redBand << std::endl;
  IntegerVector blueBand(1);
  blueBand[0]  = RcppDeepState_int();
  std::string blueBand_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_blueBand.qs";
  qs::c_qsave(blueBand,blueBand_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "blueBand values: "<< blueBand << std::endl;
  IntegerVector greenBand(1);
  greenBand[0]  = RcppDeepState_int();
  std::string greenBand_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_greenBand.qs";
  qs::c_qsave(greenBand,greenBand_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "greenBand values: "<< greenBand << std::endl;
  IntegerVector nirBand(1);
  nirBand[0]  = RcppDeepState_int();
  std::string nirBand_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nirBand.qs";
  qs::c_qsave(nirBand,nirBand_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nirBand values: "<< nirBand << std::endl;
  IntegerVector redEdge1Band(1);
  redEdge1Band[0]  = RcppDeepState_int();
  std::string redEdge1Band_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_redEdge1Band.qs";
  qs::c_qsave(redEdge1Band,redEdge1Band_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "redEdge1Band values: "<< redEdge1Band << std::endl;
  IntegerVector redEdge2Band(1);
  redEdge2Band[0]  = RcppDeepState_int();
  std::string redEdge2Band_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_redEdge2Band.qs";
  qs::c_qsave(redEdge2Band,redEdge2Band_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "redEdge2Band values: "<< redEdge2Band << std::endl;
  IntegerVector redEdge3Band(1);
  redEdge3Band[0]  = RcppDeepState_int();
  std::string redEdge3Band_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_redEdge3Band.qs";
  qs::c_qsave(redEdge3Band,redEdge3Band_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "redEdge3Band values: "<< redEdge3Band << std::endl;
  IntegerVector swir1Band(1);
  swir1Band[0]  = RcppDeepState_int();
  std::string swir1Band_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_swir1Band.qs";
  std::string s_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_s.qs";
  qs::c_qsave(swir1Band,swir1Band_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "swir1Band values: "<< swir1Band << std::endl;
  IntegerVector swir2Band(1);
  swir2Band[0]  = RcppDeepState_int();
  std::string swir2Band_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_swir2Band.qs";
  std::string s_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_s.qs";
  qs::c_qsave(swir2Band,swir2Band_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "swir2Band values: "<< swir2Band << std::endl;
  IntegerVector swir3Band(1);
  swir3Band[0]  = RcppDeepState_int();
  std::string swir3Band_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_swir3Band.qs";
  std::string s_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_s.qs";
  qs::c_qsave(swir3Band,swir3Band_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "swir3Band values: "<< swir3Band << std::endl;
  IntegerVector maskLayer(1);
  maskLayer[0]  = RcppDeepState_int();
  std::string maskLayer_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_maskLayer.qs";
  qs::c_qsave(maskLayer,maskLayer_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maskLayer values: "<< maskLayer << std::endl;
  IntegerVector maskValue(1);
  maskValue[0]  = RcppDeepState_int();
  std::string maskValue_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_maskValue.qs";
  qs::c_qsave(maskValue,maskValue_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maskValue values: "<< maskValue << std::endl;
  NumericVector L(1);
  L[0]  = RcppDeepState_double();
  std::string L_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_L.qs";
  qs::c_qsave(L,L_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "L values: "<< L << std::endl;
  NumericVector s(1);
  s[0]  = RcppDeepState_double();
  std::string s_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_s.qs";
  qs::c_qsave(s,s_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s values: "<< s << std::endl;
  NumericVector G(1);
  G[0]  = RcppDeepState_double();
  std::string G_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_G.qs";
  qs::c_qsave(G,G_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "G values: "<< G << std::endl;
  NumericVector C1(1);
  C1[0]  = RcppDeepState_double();
  std::string C1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_C1.qs";
  qs::c_qsave(C1,C1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "C1 values: "<< C1 << std::endl;
  NumericVector C2(1);
  C2[0]  = RcppDeepState_double();
  std::string C2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_C2.qs";
  qs::c_qsave(C2,C2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "C2 values: "<< C2 << std::endl;
  NumericVector Levi(1);
  Levi[0]  = RcppDeepState_double();
  std::string L_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_L.qs";
  std::string Levi_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Levi.qs";
  qs::c_qsave(Levi,Levi_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Levi values: "<< Levi << std::endl;
  NumericVector swir2ccc(1);
  swir2ccc[0]  = RcppDeepState_double();
  std::string s_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_s.qs";
  std::string swir2ccc_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_swir2ccc.qs";
  qs::c_qsave(swir2ccc,swir2ccc_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "swir2ccc values: "<< swir2ccc << std::endl;
  NumericVector swir2cdiff(1);
  swir2cdiff[0]  = RcppDeepState_double();
  std::string s_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_s.qs";
  std::string swir2cdiff_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_swir2cdiff.qs";
  qs::c_qsave(swir2cdiff,swir2cdiff_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "swir2cdiff values: "<< swir2cdiff << std::endl;
  NumericVector sf(1);
  sf[0]  = RcppDeepState_double();
  std::string s_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_s.qs";
  std::string sf_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RStoolbox/inst/testfiles/spectralIndicesCpp/libFuzzer_spectralIndicesCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sf.qs";
  qs::c_qsave(sf,sf_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sf values: "<< sf << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    spectralIndicesCpp(x,indices,redBand[0],blueBand[0],greenBand[0],nirBand[0],redEdge1Band[0],redEdge2Band[0],redEdge3Band[0],swir1Band[0],swir2Band[0],swir3Band[0],maskLayer[0],maskValue[0],L[0],s[0],G[0],C1[0],C2[0],Levi[0],swir2ccc[0],swir2cdiff[0],sf[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
