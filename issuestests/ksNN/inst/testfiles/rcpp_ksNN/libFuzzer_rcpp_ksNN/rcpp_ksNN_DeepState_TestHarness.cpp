// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// rcpp_ksNN_DeepState_TestHarness_generation.cpp and rcpp_ksNN_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List rcpp_ksNN(NumericVector Label, NumericVector Distance, double L_C);

TEST(ksNN_deepstate_test,rcpp_ksNN_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector Label  = RcppDeepState_NumericVector();
  std::string Label_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ksNN/inst/testfiles/rcpp_ksNN/libFuzzer_rcpp_ksNN/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Label.qs";
  qs::c_qsave(Label,Label_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Label values: "<< Label << std::endl;
  NumericVector Distance  = RcppDeepState_NumericVector();
  std::string Distance_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ksNN/inst/testfiles/rcpp_ksNN/libFuzzer_rcpp_ksNN/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Distance.qs";
  qs::c_qsave(Distance,Distance_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Distance values: "<< Distance << std::endl;
  NumericVector L_C(1);
  L_C[0]  = RcppDeepState_double();
  std::string L_C_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ksNN/inst/testfiles/rcpp_ksNN/libFuzzer_rcpp_ksNN/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_L_C.qs";
  qs::c_qsave(L_C,L_C_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "L_C values: "<< L_C << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    rcpp_ksNN(Label,Distance,L_C[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
