// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fun_subless_DeepState_TestHarness_generation.cpp and fun_subless_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

LogicalMatrix fun_subless(NumericVector u, NumericVector lessthan);

TEST(ALassoSurvIC_deepstate_test,fun_subless_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector u  = RcppDeepState_NumericVector();
  std::string u_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ALassoSurvIC/inst/testfiles/fun_subless/libFuzzer_fun_subless/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_u.qs";
  qs::c_qsave(u,u_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "u values: "<< u << std::endl;
  NumericVector lessthan  = RcppDeepState_NumericVector();
  std::string lessthan_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ALassoSurvIC/inst/testfiles/fun_subless/libFuzzer_fun_subless/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_lessthan.qs";
  qs::c_qsave(lessthan,lessthan_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "lessthan values: "<< lessthan << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fun_subless(u,lessthan);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
