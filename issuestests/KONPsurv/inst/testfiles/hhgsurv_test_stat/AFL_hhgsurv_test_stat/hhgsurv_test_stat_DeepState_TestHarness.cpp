// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// hhgsurv_test_stat_DeepState_TestHarness_generation.cpp and hhgsurv_test_stat_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List hhgsurv_test_stat(NumericVector s0, NumericVector s1, NumericVector time0, NumericVector time1, NumericVector time, IntegerVector delta, IntegerVector trt, double tau);

TEST(KONPsurv_deepstate_test,hhgsurv_test_stat_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector s0  = RcppDeepState_NumericVector();
  std::string s0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_s0.qs";
  qs::c_qsave(s0,s0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s0 values: "<< s0 << std::endl;
  NumericVector s1  = RcppDeepState_NumericVector();
  std::string s1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_s1.qs";
  qs::c_qsave(s1,s1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s1 values: "<< s1 << std::endl;
  NumericVector time0  = RcppDeepState_NumericVector();
  std::string time0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_time0.qs";
  std::string time_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_time.qs";
  qs::c_qsave(time0,time0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time0 values: "<< time0 << std::endl;
  NumericVector time1  = RcppDeepState_NumericVector();
  std::string time1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_time1.qs";
  std::string time_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_time.qs";
  qs::c_qsave(time1,time1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time1 values: "<< time1 << std::endl;
  NumericVector time  = RcppDeepState_NumericVector();
  std::string time_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_time.qs";
  qs::c_qsave(time,time_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time values: "<< time << std::endl;
  IntegerVector delta  = RcppDeepState_IntegerVector();
  std::string delta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_delta.qs";
  qs::c_qsave(delta,delta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "delta values: "<< delta << std::endl;
  IntegerVector trt  = RcppDeepState_IntegerVector();
  std::string trt_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_trt.qs";
  qs::c_qsave(trt,trt_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "trt values: "<< trt << std::endl;
  NumericVector tau(1);
  tau[0]  = RcppDeepState_double();
  std::string tau_t = "/home/akhila/fuzzer_packages/fuzzedpackages/KONPsurv/inst/testfiles/hhgsurv_test_stat/AFL_hhgsurv_test_stat/afl_inputs/" + std::to_string(t) + "_tau.qs";
  qs::c_qsave(tau,tau_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau values: "<< tau << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    hhgsurv_test_stat(s0,s1,time0,time1,time,delta,trt,tau[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
