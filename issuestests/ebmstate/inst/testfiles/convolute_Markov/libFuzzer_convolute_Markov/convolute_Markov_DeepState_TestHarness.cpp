// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// convolute_Markov_DeepState_TestHarness_generation.cpp and convolute_Markov_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector convolute_Markov(NumericVector time_vector, NumericVector diff_vector, NumericVector probtrans_vector_1, NumericVector probtrans_vector_2);

TEST(ebmstate_deepstate_test,convolute_Markov_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector time_vector  = RcppDeepState_NumericVector();
  std::string time_vector_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ebmstate/inst/testfiles/convolute_Markov/libFuzzer_convolute_Markov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_time_vector.qs";
  qs::c_qsave(time_vector,time_vector_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time_vector values: "<< time_vector << std::endl;
  NumericVector diff_vector  = RcppDeepState_NumericVector();
  std::string diff_vector_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ebmstate/inst/testfiles/convolute_Markov/libFuzzer_convolute_Markov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_diff_vector.qs";
  qs::c_qsave(diff_vector,diff_vector_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "diff_vector values: "<< diff_vector << std::endl;
  NumericVector probtrans_vector_1  = RcppDeepState_NumericVector();
  std::string probtrans_vector_1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ebmstate/inst/testfiles/convolute_Markov/libFuzzer_convolute_Markov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_probtrans_vector_1.qs";
  qs::c_qsave(probtrans_vector_1,probtrans_vector_1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probtrans_vector_1 values: "<< probtrans_vector_1 << std::endl;
  NumericVector probtrans_vector_2  = RcppDeepState_NumericVector();
  std::string probtrans_vector_2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ebmstate/inst/testfiles/convolute_Markov/libFuzzer_convolute_Markov/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_probtrans_vector_2.qs";
  qs::c_qsave(probtrans_vector_2,probtrans_vector_2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "probtrans_vector_2 values: "<< probtrans_vector_2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    convolute_Markov(time_vector,diff_vector,probtrans_vector_1,probtrans_vector_2);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
