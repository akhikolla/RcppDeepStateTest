// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// makenewknots_DeepState_TestHarness_generation.cpp and makenewknots_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector makenewknots(NumericVector knots, int degree);

TEST(GeDS_deepstate_test,makenewknots_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector knots  = RcppDeepState_NumericVector();
  std::string knots_t = "/home/akhila/fuzzer_packages/fuzzedpackages/GeDS/inst/testfiles/makenewknots/libFuzzer_makenewknots/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_knots.qs";
  qs::c_qsave(knots,knots_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "knots values: "<< knots << std::endl;
  IntegerVector degree(1);
  degree[0]  = RcppDeepState_int();
  std::string degree_t = "/home/akhila/fuzzer_packages/fuzzedpackages/GeDS/inst/testfiles/makenewknots/libFuzzer_makenewknots/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_degree.qs";
  qs::c_qsave(degree,degree_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "degree values: "<< degree << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    makenewknots(knots,degree[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
