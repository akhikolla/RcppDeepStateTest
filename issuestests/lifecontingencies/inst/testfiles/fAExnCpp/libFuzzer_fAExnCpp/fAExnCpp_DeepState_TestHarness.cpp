// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fAExnCpp_DeepState_TestHarness_generation.cpp and fAExnCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double fAExnCpp(double T, double y, double n, double i, double k);

TEST(lifecontingencies_deepstate_test,fAExnCpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector T(1);
  T[0]  = RcppDeepState_double();
  std::string T_t = "/home/akhila/fuzzer_packages/fuzzedpackages/lifecontingencies/inst/testfiles/fAExnCpp/libFuzzer_fAExnCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_T.qs";
  qs::c_qsave(T,T_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "T values: "<< T << std::endl;
  NumericVector y(1);
  y[0]  = RcppDeepState_double();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/lifecontingencies/inst/testfiles/fAExnCpp/libFuzzer_fAExnCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector n(1);
  n[0]  = RcppDeepState_double();
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/lifecontingencies/inst/testfiles/fAExnCpp/libFuzzer_fAExnCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_n.qs";
  qs::c_qsave(n,n_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  NumericVector i(1);
  i[0]  = RcppDeepState_double();
  std::string i_t = "/home/akhila/fuzzer_packages/fuzzedpackages/lifecontingencies/inst/testfiles/fAExnCpp/libFuzzer_fAExnCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_i.qs";
  qs::c_qsave(i,i_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i values: "<< i << std::endl;
  NumericVector k(1);
  k[0]  = RcppDeepState_double();
  std::string k_t = "/home/akhila/fuzzer_packages/fuzzedpackages/lifecontingencies/inst/testfiles/fAExnCpp/libFuzzer_fAExnCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_k.qs";
  qs::c_qsave(k,k_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "k values: "<< k << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fAExnCpp(T[0],y[0],n[0],i[0],k[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
