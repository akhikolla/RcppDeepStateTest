// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// B_est1_DeepState_TestHarness_generation.cpp and B_est1_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

SEXP B_est1(NumericVector time, NumericVector status, NumericVector stime, NumericVector stime1, NumericVector G, NumericVector X, double tau_bet, NumericMatrix epstheta, NumericMatrix Edot, double pdim);

TEST(ivtools_deepstate_test,B_est1_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector time  = RcppDeepState_NumericVector();
  std::string time_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_time.qs";
  qs::c_qsave(time,time_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time values: "<< time << std::endl;
  NumericVector status  = RcppDeepState_NumericVector();
  std::string status_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_status.qs";
  qs::c_qsave(status,status_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "status values: "<< status << std::endl;
  NumericVector stime  = RcppDeepState_NumericVector();
  std::string stime_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_stime.qs";
  qs::c_qsave(stime,stime_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "stime values: "<< stime << std::endl;
  NumericVector stime1  = RcppDeepState_NumericVector();
  std::string stime_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_stime.qs";
  std::string stime1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_stime1.qs";
  qs::c_qsave(stime1,stime1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "stime1 values: "<< stime1 << std::endl;
  NumericVector G  = RcppDeepState_NumericVector();
  std::string G_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_G.qs";
  qs::c_qsave(G,G_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "G values: "<< G << std::endl;
  NumericVector X  = RcppDeepState_NumericVector();
  std::string X_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_X.qs";
  qs::c_qsave(X,X_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "X values: "<< X << std::endl;
  NumericVector tau_bet(1);
  tau_bet[0]  = RcppDeepState_double();
  std::string tau_bet_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tau_bet.qs";
  qs::c_qsave(tau_bet,tau_bet_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tau_bet values: "<< tau_bet << std::endl;
  NumericMatrix epstheta  = RcppDeepState_NumericMatrix();
  std::string epstheta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_epstheta.qs";
  qs::c_qsave(epstheta,epstheta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "epstheta values: "<< epstheta << std::endl;
  NumericMatrix Edot  = RcppDeepState_NumericMatrix();
  std::string Edot_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Edot.qs";
  qs::c_qsave(Edot,Edot_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Edot values: "<< Edot << std::endl;
  NumericVector pdim(1);
  pdim[0]  = RcppDeepState_double();
  std::string pdim_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ivtools/inst/testfiles/B_est1/libFuzzer_B_est1/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_pdim.qs";
  qs::c_qsave(pdim,pdim_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pdim values: "<< pdim << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    B_est1(time,status,stime,stime1,G,X,tau_bet[0],epstheta,Edot,pdim[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
