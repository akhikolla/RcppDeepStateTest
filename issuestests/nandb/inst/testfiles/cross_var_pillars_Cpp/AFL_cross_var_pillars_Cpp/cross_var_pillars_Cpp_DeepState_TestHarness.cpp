// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cross_var_pillars_Cpp_DeepState_TestHarness_generation.cpp and cross_var_pillars_Cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix cross_var_pillars_Cpp(NumericVector x3d, NumericVector y3d);

TEST(nandb_deepstate_test,cross_var_pillars_Cpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x3d  = RcppDeepState_NumericVector();
  std::string x3d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_pillars_Cpp/AFL_cross_var_pillars_Cpp/afl_inputs/" + std::to_string(t) + "_x3d.qs";
  qs::c_qsave(x3d,x3d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x3d values: "<< x3d << std::endl;
  NumericVector y3d  = RcppDeepState_NumericVector();
  std::string y3d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/cross_var_pillars_Cpp/AFL_cross_var_pillars_Cpp/afl_inputs/" + std::to_string(t) + "_y3d.qs";
  qs::c_qsave(y3d,y3d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y3d values: "<< y3d << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cross_var_pillars_Cpp(x3d,y3d);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
