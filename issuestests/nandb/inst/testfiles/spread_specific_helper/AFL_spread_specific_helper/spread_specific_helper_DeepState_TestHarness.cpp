// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// spread_specific_helper_DeepState_TestHarness_generation.cpp and spread_specific_helper_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector spread_specific_helper(NumericVector interval_lengths, IntegerVector interval_pops, int m);

TEST(nandb_deepstate_test,spread_specific_helper_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector interval_lengths  = RcppDeepState_NumericVector();
  std::string interval_lengths_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/spread_specific_helper/AFL_spread_specific_helper/afl_inputs/" + std::to_string(t) + "_interval_lengths.qs";
  qs::c_qsave(interval_lengths,interval_lengths_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "interval_lengths values: "<< interval_lengths << std::endl;
  IntegerVector interval_pops  = RcppDeepState_IntegerVector();
  std::string interval_pops_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/spread_specific_helper/AFL_spread_specific_helper/afl_inputs/" + std::to_string(t) + "_interval_pops.qs";
  qs::c_qsave(interval_pops,interval_pops_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "interval_pops values: "<< interval_pops << std::endl;
  IntegerVector m(1);
  m[0]  = RcppDeepState_int();
  std::string m_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nandb/inst/testfiles/spread_specific_helper/AFL_spread_specific_helper/afl_inputs/" + std::to_string(t) + "_m.qs";
  qs::c_qsave(m,m_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    spread_specific_helper(interval_lengths,interval_pops,m[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
