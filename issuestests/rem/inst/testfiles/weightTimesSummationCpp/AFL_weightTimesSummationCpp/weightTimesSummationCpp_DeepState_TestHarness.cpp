// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// weightTimesSummationCpp_DeepState_TestHarness_generation.cpp and weightTimesSummationCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double weightTimesSummationCpp(NumericVector pastSenderTimes, double xlog, double currentTime, NumericVector weightvar);

TEST(rem_deepstate_test,weightTimesSummationCpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector pastSenderTimes  = RcppDeepState_NumericVector();
  std::string pastSenderTimes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rem/inst/testfiles/weightTimesSummationCpp/AFL_weightTimesSummationCpp/afl_inputs/" + std::to_string(t) + "_pastSenderTimes.qs";
  qs::c_qsave(pastSenderTimes,pastSenderTimes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pastSenderTimes values: "<< pastSenderTimes << std::endl;
  NumericVector xlog(1);
  xlog[0]  = RcppDeepState_double();
  std::string xlog_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rem/inst/testfiles/weightTimesSummationCpp/AFL_weightTimesSummationCpp/afl_inputs/" + std::to_string(t) + "_xlog.qs";
  qs::c_qsave(xlog,xlog_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xlog values: "<< xlog << std::endl;
  NumericVector currentTime(1);
  currentTime[0]  = RcppDeepState_double();
  std::string currentTime_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rem/inst/testfiles/weightTimesSummationCpp/AFL_weightTimesSummationCpp/afl_inputs/" + std::to_string(t) + "_currentTime.qs";
  qs::c_qsave(currentTime,currentTime_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "currentTime values: "<< currentTime << std::endl;
  NumericVector weightvar  = RcppDeepState_NumericVector();
  std::string weightvar_t = "/home/akhila/fuzzer_packages/fuzzedpackages/rem/inst/testfiles/weightTimesSummationCpp/AFL_weightTimesSummationCpp/afl_inputs/" + std::to_string(t) + "_weightvar.qs";
  qs::c_qsave(weightvar,weightvar_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "weightvar values: "<< weightvar << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    weightTimesSummationCpp(pastSenderTimes,xlog[0],currentTime[0],weightvar);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
