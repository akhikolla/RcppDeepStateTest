// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// orderTriGrid__DeepState_TestHarness_generation.cpp and orderTriGrid__DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List orderTriGrid_(NumericMatrix faces, NumericMatrix neigh, NumericVector startFaces, NumericVector startVert, int nBelts, int nV);

TEST(icosa_deepstate_test,orderTriGrid__test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix faces  = RcppDeepState_NumericMatrix();
  std::string faces_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/orderTriGrid_/libFuzzer_orderTriGrid_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_faces.qs";
  qs::c_qsave(faces,faces_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "faces values: "<< faces << std::endl;
  NumericMatrix neigh  = RcppDeepState_NumericMatrix();
  std::string neigh_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/orderTriGrid_/libFuzzer_orderTriGrid_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_neigh.qs";
  qs::c_qsave(neigh,neigh_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "neigh values: "<< neigh << std::endl;
  NumericVector startFaces  = RcppDeepState_NumericVector();
  std::string startFaces_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/orderTriGrid_/libFuzzer_orderTriGrid_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_startFaces.qs";
  qs::c_qsave(startFaces,startFaces_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "startFaces values: "<< startFaces << std::endl;
  NumericVector startVert  = RcppDeepState_NumericVector();
  std::string startVert_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/orderTriGrid_/libFuzzer_orderTriGrid_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_startVert.qs";
  qs::c_qsave(startVert,startVert_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "startVert values: "<< startVert << std::endl;
  IntegerVector nBelts(1);
  nBelts[0]  = RcppDeepState_int();
  std::string nBelts_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/orderTriGrid_/libFuzzer_orderTriGrid_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nBelts.qs";
  qs::c_qsave(nBelts,nBelts_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nBelts values: "<< nBelts << std::endl;
  IntegerVector nV(1);
  nV[0]  = RcppDeepState_int();
  std::string nV_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/orderTriGrid_/libFuzzer_orderTriGrid_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nV.qs";
  qs::c_qsave(nV,nV_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nV values: "<< nV << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    orderTriGrid_(faces,neigh,startFaces,startVert,nBelts[0],nV[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
