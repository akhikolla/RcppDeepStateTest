// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Aggregate__DeepState_TestHarness_generation.cpp and Aggregate__DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector Aggregate_(NumericMatrix gridPoints, NumericMatrix queries, NumericVector origin);

TEST(icosa_deepstate_test,Aggregate__test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix gridPoints  = RcppDeepState_NumericMatrix();
  std::string gridPoints_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/Aggregate_/libFuzzer_Aggregate_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_gridPoints.qs";
  qs::c_qsave(gridPoints,gridPoints_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "gridPoints values: "<< gridPoints << std::endl;
  NumericMatrix queries  = RcppDeepState_NumericMatrix();
  std::string queries_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/Aggregate_/libFuzzer_Aggregate_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_queries.qs";
  qs::c_qsave(queries,queries_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "queries values: "<< queries << std::endl;
  NumericVector origin  = RcppDeepState_NumericVector();
  std::string origin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/icosa/inst/testfiles/Aggregate_/libFuzzer_Aggregate_/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_origin.qs";
  qs::c_qsave(origin,origin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "origin values: "<< origin << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Aggregate_(gridPoints,queries,origin);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
