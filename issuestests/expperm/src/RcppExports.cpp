// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// BG_cpp
NumericMatrix BG_cpp(NumericMatrix A);
RcppExport SEXP _expperm_BG_cpp(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(BG_cpp(A));
    return rcpp_result_gen;
END_RCPP
}
// brute_cpp
NumericMatrix brute_cpp(NumericMatrix A);
RcppExport SEXP _expperm_brute_cpp(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(brute_cpp(A));
    return rcpp_result_gen;
END_RCPP
}
// ryser_cpp
NumericMatrix ryser_cpp(NumericMatrix A);
RcppExport SEXP _expperm_ryser_cpp(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(ryser_cpp(A));
    return rcpp_result_gen;
END_RCPP
}
// sink_cpp
NumericMatrix sink_cpp(NumericMatrix A, int maxit);
RcppExport SEXP _expperm_sink_cpp(SEXP ASEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(sink_cpp(A, maxit));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_expperm_BG_cpp", (DL_FUNC) &_expperm_BG_cpp, 1},
    {"_expperm_brute_cpp", (DL_FUNC) &_expperm_brute_cpp, 1},
    {"_expperm_ryser_cpp", (DL_FUNC) &_expperm_ryser_cpp, 1},
    {"_expperm_sink_cpp", (DL_FUNC) &_expperm_sink_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_expperm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
