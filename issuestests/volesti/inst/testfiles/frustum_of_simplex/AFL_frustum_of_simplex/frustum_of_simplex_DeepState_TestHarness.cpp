// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// frustum_of_simplex_DeepState_TestHarness_generation.cpp and frustum_of_simplex_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double frustum_of_simplex(Rcpp::NumericVector a, double z0);

TEST(volesti_deepstate_test,frustum_of_simplex_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector a  = RcppDeepState_NumericVector();
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/volesti/inst/testfiles/frustum_of_simplex/AFL_frustum_of_simplex/afl_inputs/" + std::to_string(t) + "_a.qs";
  qs::c_qsave(a,a_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  NumericVector z0(1);
  z0[0]  = RcppDeepState_double();
  std::string z0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/volesti/inst/testfiles/frustum_of_simplex/AFL_frustum_of_simplex/afl_inputs/" + std::to_string(t) + "_z0.qs";
  qs::c_qsave(z0,z0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "z0 values: "<< z0 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    frustum_of_simplex(a,z0[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
