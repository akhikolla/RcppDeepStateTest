<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./cond_var_gradient_hessian_cpp_DeepState_TestHarness --input_test_file /home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_output/c5e6a49f7f5da8302a840d6885f7a3c78ad2e715.pass</line>
</preamble>

<pid>1830466</pid>
<ppid>1830465</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_output/log_c5e6a49f7f5da8302a840d6885f7a3c78ad2e715/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./cond_var_gradient_hessian_cpp_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_output/c5e6a49f7f5da8302a840d6885f7a3c78ad2e715.pass</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.050 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x420A99</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>cond_var_gradient_hessian_cpp(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, double, double, double, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;)</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT</dir>
      <file>src/Experimental.cpp</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x40A5F6</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_Test_CPAT_deepstate_test_cond_var_gradient_hessian_cpp_test()</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp</dir>
      <file>cond_var_gradient_hessian_cpp_DeepState_TestHarness.cpp</file>
      <line>42</line>
    </frame>
    <frame>
      <ip>0x4099E8</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_Run_CPAT_deepstate_test_cond_var_gradient_hessian_cpp_test()</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp</dir>
      <file>cond_var_gradient_hessian_cpp_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x41A318</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41A5B9</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41A694</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407745</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x8ab3928 is 0 bytes after a block of size 440 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x49CA3E4</ip>
      <obj>/usr/lib/R/lib/libR.so</obj>
      <fn>Rf_allocVector3</fn>
    </frame>
    <frame>
      <ip>0x40C6DD</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;::Vector(int const&amp;)</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6</dir>
      <file>Rcpp/include/Rcpp/vector/Vector.h</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x408BBA</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>RcppDeepState_NumericVector()</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState</dir>
      <file>include/RcppDeepState.h</file>
      <line>44</line>
    </frame>
    <frame>
      <ip>0x409BC4</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_Test_CPAT_deepstate_test_cond_var_gradient_hessian_cpp_test()</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp</dir>
      <file>cond_var_gradient_hessian_cpp_DeepState_TestHarness.cpp</file>
      <line>17</line>
    </frame>
    <frame>
      <ip>0x4099E8</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_Run_CPAT_deepstate_test_cond_var_gradient_hessian_cpp_test()</fn>
      <dir>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp</dir>
      <file>cond_var_gradient_hessian_cpp_DeepState_TestHarness.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x41A318</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41A5B9</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41A694</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407745</ip>
      <obj>/home/akhila/R/x86_64-pc-linux-gnu-library/3.6/RcppDeepState/extdata/issuestests/CPAT/inst/testfiles/cond_var_gradient_hessian_cpp/cond_var_gradient_hessian_cpp_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:13.329 </time>
</status>

<errorcounts>
  <pair>
    <count>46</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:00:14.284 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

