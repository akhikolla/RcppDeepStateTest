// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// W_kappa_ij_DeepState_TestHarness_generation.cpp and W_kappa_ij_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix W_kappa_ij(NumericMatrix design, NumericVector theta, int i1, int i2, int ct);

TEST(activegp_deepstate_test,W_kappa_ij_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix design  = RcppDeepState_NumericMatrix();
  std::string design_t = "/home/akhila/fuzzer_packages/fuzzedpackages/activegp/inst/testfiles/W_kappa_ij/AFL_W_kappa_ij/afl_inputs/" + std::to_string(t) + "_design.qs";
  qs::c_qsave(design,design_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "design values: "<< design << std::endl;
  NumericVector theta  = RcppDeepState_NumericVector();
  std::string theta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/activegp/inst/testfiles/W_kappa_ij/AFL_W_kappa_ij/afl_inputs/" + std::to_string(t) + "_theta.qs";
  qs::c_qsave(theta,theta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theta values: "<< theta << std::endl;
  IntegerVector i1(1);
  i1[0]  = RcppDeepState_int();
  std::string i1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/activegp/inst/testfiles/W_kappa_ij/AFL_W_kappa_ij/afl_inputs/" + std::to_string(t) + "_i1.qs";
  qs::c_qsave(i1,i1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i1 values: "<< i1 << std::endl;
  IntegerVector i2(1);
  i2[0]  = RcppDeepState_int();
  std::string i2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/activegp/inst/testfiles/W_kappa_ij/AFL_W_kappa_ij/afl_inputs/" + std::to_string(t) + "_i2.qs";
  qs::c_qsave(i2,i2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "i2 values: "<< i2 << std::endl;
  IntegerVector ct(1);
  ct[0]  = RcppDeepState_int();
  std::string ct_t = "/home/akhila/fuzzer_packages/fuzzedpackages/activegp/inst/testfiles/W_kappa_ij/AFL_W_kappa_ij/afl_inputs/" + std::to_string(t) + "_ct.qs";
  qs::c_qsave(ct,ct_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ct values: "<< ct << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    W_kappa_ij(design,theta,i1[0],i2[0],ct[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
