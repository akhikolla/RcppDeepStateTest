// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// ZigZagIIDGaussian_DeepState_TestHarness_generation.cpp and ZigZagIIDGaussian_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List ZigZagIIDGaussian(double variance, int dim, int n_iter, double finalTime, const NumericVector x0, const NumericVector v0);

TEST(RZigZag_deepstate_test,ZigZagIIDGaussian_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector variance(1);
  variance[0]  = RcppDeepState_double();
  std::string variance_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RZigZag/inst/testfiles/ZigZagIIDGaussian/AFL_ZigZagIIDGaussian/afl_inputs/" + std::to_string(t) + "_variance.qs";
  qs::c_qsave(variance,variance_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "variance values: "<< variance << std::endl;
  IntegerVector dim(1);
  dim[0]  = RcppDeepState_int();
  std::string dim_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RZigZag/inst/testfiles/ZigZagIIDGaussian/AFL_ZigZagIIDGaussian/afl_inputs/" + std::to_string(t) + "_dim.qs";
  qs::c_qsave(dim,dim_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dim values: "<< dim << std::endl;
  IntegerVector n_iter(1);
  n_iter[0]  = RcppDeepState_int();
  std::string n_iter_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RZigZag/inst/testfiles/ZigZagIIDGaussian/AFL_ZigZagIIDGaussian/afl_inputs/" + std::to_string(t) + "_n_iter.qs";
  qs::c_qsave(n_iter,n_iter_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n_iter values: "<< n_iter << std::endl;
  NumericVector finalTime(1);
  finalTime[0]  = RcppDeepState_double();
  std::string finalTime_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RZigZag/inst/testfiles/ZigZagIIDGaussian/AFL_ZigZagIIDGaussian/afl_inputs/" + std::to_string(t) + "_finalTime.qs";
  qs::c_qsave(finalTime,finalTime_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "finalTime values: "<< finalTime << std::endl;
  NumericVector x0  = RcppDeepState_NumericVector();
  std::string x0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RZigZag/inst/testfiles/ZigZagIIDGaussian/AFL_ZigZagIIDGaussian/afl_inputs/" + std::to_string(t) + "_x0.qs";
  qs::c_qsave(x0,x0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x0 values: "<< x0 << std::endl;
  NumericVector v0  = RcppDeepState_NumericVector();
  std::string v0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/RZigZag/inst/testfiles/ZigZagIIDGaussian/AFL_ZigZagIIDGaussian/afl_inputs/" + std::to_string(t) + "_v0.qs";
  qs::c_qsave(v0,v0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "v0 values: "<< v0 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    ZigZagIIDGaussian(variance[0],dim[0],n_iter[0],finalTime[0],x0,v0);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
