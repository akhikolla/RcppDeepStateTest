// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sum_isna_char_DeepState_TestHarness_generation.cpp and sum_isna_char_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

R_xlen_t sum_isna_char(CharacterVector x, int nThread);

TEST(hutilscpp_deepstate_test,sum_isna_char_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector x  = RcppDeepState_CharacterVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/hutilscpp/inst/testfiles/sum_isna_char/libFuzzer_sum_isna_char/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector nThread(1);
  nThread[0]  = RcppDeepState_int();
  std::string nThread_t = "/home/akhila/fuzzer_packages/fuzzedpackages/hutilscpp/inst/testfiles/sum_isna_char/libFuzzer_sum_isna_char/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nThread.qs";
  qs::c_qsave(nThread,nThread_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nThread values: "<< nThread << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sum_isna_char(x,nThread[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
