// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// gseaPermutation_DeepState_TestHarness_generation.cpp and gseaPermutation_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector gseaPermutation(NumericMatrix inset_scores, NumericMatrix outset_scores, NumericVector expression_value);

TEST(WebGestaltR_deepstate_test,gseaPermutation_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix inset_scores  = RcppDeepState_NumericMatrix();
  std::string inset_scores_t = "/home/akhila/fuzzer_packages/fuzzedpackages/WebGestaltR/inst/testfiles/gseaPermutation/AFL_gseaPermutation/afl_inputs/" + std::to_string(t) + "_inset_scores.qs";
  qs::c_qsave(inset_scores,inset_scores_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "inset_scores values: "<< inset_scores << std::endl;
  NumericMatrix outset_scores  = RcppDeepState_NumericMatrix();
  std::string outset_scores_t = "/home/akhila/fuzzer_packages/fuzzedpackages/WebGestaltR/inst/testfiles/gseaPermutation/AFL_gseaPermutation/afl_inputs/" + std::to_string(t) + "_outset_scores.qs";
  qs::c_qsave(outset_scores,outset_scores_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "outset_scores values: "<< outset_scores << std::endl;
  NumericVector expression_value  = RcppDeepState_NumericVector();
  std::string expression_value_t = "/home/akhila/fuzzer_packages/fuzzedpackages/WebGestaltR/inst/testfiles/gseaPermutation/AFL_gseaPermutation/afl_inputs/" + std::to_string(t) + "_expression_value.qs";
  qs::c_qsave(expression_value,expression_value_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "expression_value values: "<< expression_value << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    gseaPermutation(inset_scores,outset_scores,expression_value);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
