// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// surva_DeepState_TestHarness_generation.cpp and surva_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double surva(NumericVector thetaTmp, double m, double m2, double t, NumericVector KnotI, NumericVector KnotM);

TEST(cenROC_deepstate_test,surva_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector thetaTmp  = RcppDeepState_NumericVector();
  std::string thetaTmp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/cenROC/inst/testfiles/surva/libFuzzer_surva/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_thetaTmp.qs";
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/cenROC/inst/testfiles/surva/libFuzzer_surva/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t.qs";
  qs::c_qsave(thetaTmp,thetaTmp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "thetaTmp values: "<< thetaTmp << std::endl;
  NumericVector m(1);
  m[0]  = RcppDeepState_double();
  std::string m_t = "/home/akhila/fuzzer_packages/fuzzedpackages/cenROC/inst/testfiles/surva/libFuzzer_surva/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_m.qs";
  qs::c_qsave(m,m_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  NumericVector m2(1);
  m2[0]  = RcppDeepState_double();
  std::string m_t = "/home/akhila/fuzzer_packages/fuzzedpackages/cenROC/inst/testfiles/surva/libFuzzer_surva/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_m.qs";
  std::string m2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/cenROC/inst/testfiles/surva/libFuzzer_surva/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_m2.qs";
  qs::c_qsave(m2,m2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m2 values: "<< m2 << std::endl;
  NumericVector t(1);
  t[0]  = RcppDeepState_double();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/cenROC/inst/testfiles/surva/libFuzzer_surva/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  NumericVector KnotI  = RcppDeepState_NumericVector();
  std::string KnotI_t = "/home/akhila/fuzzer_packages/fuzzedpackages/cenROC/inst/testfiles/surva/libFuzzer_surva/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_KnotI.qs";
  qs::c_qsave(KnotI,KnotI_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "KnotI values: "<< KnotI << std::endl;
  NumericVector KnotM  = RcppDeepState_NumericVector();
  std::string KnotM_t = "/home/akhila/fuzzer_packages/fuzzedpackages/cenROC/inst/testfiles/surva/libFuzzer_surva/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_KnotM.qs";
  qs::c_qsave(KnotM,KnotM_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "KnotM values: "<< KnotM << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    surva(thetaTmp,m[0],m2[0],t[0],KnotI,KnotM);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
