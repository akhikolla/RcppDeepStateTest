// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// c_match_DeepState_TestHarness_generation.cpp and c_match_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector c_match(NumericVector target, NumericVector candidate, int ratio);

TEST(psrwe_deepstate_test,c_match_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector target  = RcppDeepState_NumericVector();
  std::string target_t = "/home/akhila/fuzzer_packages/fuzzedpackages/psrwe/inst/testfiles/c_match/AFL_c_match/afl_inputs/" + std::to_string(t) + "_target.qs";
  qs::c_qsave(target,target_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "target values: "<< target << std::endl;
  NumericVector candidate  = RcppDeepState_NumericVector();
  std::string candidate_t = "/home/akhila/fuzzer_packages/fuzzedpackages/psrwe/inst/testfiles/c_match/AFL_c_match/afl_inputs/" + std::to_string(t) + "_candidate.qs";
  qs::c_qsave(candidate,candidate_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "candidate values: "<< candidate << std::endl;
  IntegerVector ratio(1);
  ratio[0]  = RcppDeepState_int();
  std::string ratio_t = "/home/akhila/fuzzer_packages/fuzzedpackages/psrwe/inst/testfiles/c_match/AFL_c_match/afl_inputs/" + std::to_string(t) + "_ratio.qs";
  qs::c_qsave(ratio,ratio_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ratio values: "<< ratio << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    c_match(target,candidate,ratio[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
