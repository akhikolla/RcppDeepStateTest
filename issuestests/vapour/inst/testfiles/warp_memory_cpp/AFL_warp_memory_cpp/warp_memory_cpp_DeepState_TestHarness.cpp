// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// warp_memory_cpp_DeepState_TestHarness_generation.cpp and warp_memory_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List warp_memory_cpp(CharacterVector source_filename, CharacterVector source_WKT, CharacterVector target_WKT, NumericVector target_geotransform, IntegerVector target_dim, IntegerVector band);

TEST(vapour_deepstate_test,warp_memory_cpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector source_filename  = RcppDeepState_CharacterVector();
  std::string source_filename_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vapour/inst/testfiles/warp_memory_cpp/AFL_warp_memory_cpp/afl_inputs/" + std::to_string(t) + "_source_filename.qs";
  qs::c_qsave(source_filename,source_filename_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "source_filename values: "<< source_filename << std::endl;
  CharacterVector source_WKT  = RcppDeepState_CharacterVector();
  std::string source_WKT_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vapour/inst/testfiles/warp_memory_cpp/AFL_warp_memory_cpp/afl_inputs/" + std::to_string(t) + "_source_WKT.qs";
  qs::c_qsave(source_WKT,source_WKT_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "source_WKT values: "<< source_WKT << std::endl;
  CharacterVector target_WKT  = RcppDeepState_CharacterVector();
  std::string target_WKT_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vapour/inst/testfiles/warp_memory_cpp/AFL_warp_memory_cpp/afl_inputs/" + std::to_string(t) + "_target_WKT.qs";
  qs::c_qsave(target_WKT,target_WKT_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "target_WKT values: "<< target_WKT << std::endl;
  NumericVector target_geotransform  = RcppDeepState_NumericVector();
  std::string target_geotransform_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vapour/inst/testfiles/warp_memory_cpp/AFL_warp_memory_cpp/afl_inputs/" + std::to_string(t) + "_target_geotransform.qs";
  qs::c_qsave(target_geotransform,target_geotransform_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "target_geotransform values: "<< target_geotransform << std::endl;
  IntegerVector target_dim  = RcppDeepState_IntegerVector();
  std::string target_dim_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vapour/inst/testfiles/warp_memory_cpp/AFL_warp_memory_cpp/afl_inputs/" + std::to_string(t) + "_target_dim.qs";
  qs::c_qsave(target_dim,target_dim_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "target_dim values: "<< target_dim << std::endl;
  IntegerVector band  = RcppDeepState_IntegerVector();
  std::string band_t = "/home/akhila/fuzzer_packages/fuzzedpackages/vapour/inst/testfiles/warp_memory_cpp/AFL_warp_memory_cpp/afl_inputs/" + std::to_string(t) + "_band.qs";
  qs::c_qsave(band,band_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "band values: "<< band << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    warp_memory_cpp(source_filename,source_WKT,target_WKT,target_geotransform,target_dim,band);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
