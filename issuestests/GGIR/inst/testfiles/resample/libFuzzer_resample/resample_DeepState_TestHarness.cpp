// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// resample_DeepState_TestHarness_generation.cpp and resample_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix resample(NumericMatrix raw, NumericVector rawTime, NumericVector time, int stop);

TEST(GGIR_deepstate_test,resample_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix raw  = RcppDeepState_NumericMatrix();
  std::string raw_t = "/home/akhila/fuzzer_packages/fuzzedpackages/GGIR/inst/testfiles/resample/libFuzzer_resample/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_raw.qs";
  qs::c_qsave(raw,raw_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "raw values: "<< raw << std::endl;
  NumericVector rawTime  = RcppDeepState_NumericVector();
  std::string raw_t = "/home/akhila/fuzzer_packages/fuzzedpackages/GGIR/inst/testfiles/resample/libFuzzer_resample/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_raw.qs";
  std::string rawTime_t = "/home/akhila/fuzzer_packages/fuzzedpackages/GGIR/inst/testfiles/resample/libFuzzer_resample/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rawTime.qs";
  qs::c_qsave(rawTime,rawTime_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rawTime values: "<< rawTime << std::endl;
  NumericVector time  = RcppDeepState_NumericVector();
  std::string time_t = "/home/akhila/fuzzer_packages/fuzzedpackages/GGIR/inst/testfiles/resample/libFuzzer_resample/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_time.qs";
  qs::c_qsave(time,time_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time values: "<< time << std::endl;
  IntegerVector stop(1);
  stop[0]  = RcppDeepState_int();
  std::string stop_t = "/home/akhila/fuzzer_packages/fuzzedpackages/GGIR/inst/testfiles/resample/libFuzzer_resample/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_stop.qs";
  qs::c_qsave(stop,stop_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "stop values: "<< stop << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    resample(raw,rawTime,time,stop[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
