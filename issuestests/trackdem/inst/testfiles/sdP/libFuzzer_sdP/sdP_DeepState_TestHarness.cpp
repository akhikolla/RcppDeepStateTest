// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sdP_DeepState_TestHarness_generation.cpp and sdP_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector sdP(NumericVector m, NumericVector id, NumericVector cm1, NumericVector cm2, NumericVector cm3, IntegerVector d);

TEST(trackdem_deepstate_test,sdP_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector m  = RcppDeepState_NumericVector();
  std::string m_t = "/home/akhila/fuzzer_packages/fuzzedpackages/trackdem/inst/testfiles/sdP/libFuzzer_sdP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_m.qs";
  qs::c_qsave(m,m_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "m values: "<< m << std::endl;
  NumericVector id  = RcppDeepState_NumericVector();
  std::string id_t = "/home/akhila/fuzzer_packages/fuzzedpackages/trackdem/inst/testfiles/sdP/libFuzzer_sdP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_id.qs";
  qs::c_qsave(id,id_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "id values: "<< id << std::endl;
  NumericVector cm1  = RcppDeepState_NumericVector();
  std::string cm1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/trackdem/inst/testfiles/sdP/libFuzzer_sdP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_cm1.qs";
  qs::c_qsave(cm1,cm1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cm1 values: "<< cm1 << std::endl;
  NumericVector cm2  = RcppDeepState_NumericVector();
  std::string cm2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/trackdem/inst/testfiles/sdP/libFuzzer_sdP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_cm2.qs";
  qs::c_qsave(cm2,cm2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cm2 values: "<< cm2 << std::endl;
  NumericVector cm3  = RcppDeepState_NumericVector();
  std::string cm3_t = "/home/akhila/fuzzer_packages/fuzzedpackages/trackdem/inst/testfiles/sdP/libFuzzer_sdP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_cm3.qs";
  qs::c_qsave(cm3,cm3_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cm3 values: "<< cm3 << std::endl;
  IntegerVector d  = RcppDeepState_IntegerVector();
  std::string d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/trackdem/inst/testfiles/sdP/libFuzzer_sdP/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_d.qs";
  qs::c_qsave(d,d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sdP(m,id,cm1,cm2,cm3,d);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
