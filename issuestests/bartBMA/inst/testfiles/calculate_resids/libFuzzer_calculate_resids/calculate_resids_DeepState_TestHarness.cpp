// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calculate_resids_DeepState_TestHarness_generation.cpp and calculate_resids_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector calculate_resids(NumericMatrix predictions, NumericVector response);

TEST(bartBMA_deepstate_test,calculate_resids_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix predictions  = RcppDeepState_NumericMatrix();
  std::string predictions_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/calculate_resids/libFuzzer_calculate_resids/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_predictions.qs";
  qs::c_qsave(predictions,predictions_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "predictions values: "<< predictions << std::endl;
  NumericVector response  = RcppDeepState_NumericVector();
  std::string response_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/calculate_resids/libFuzzer_calculate_resids/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_response.qs";
  qs::c_qsave(response,response_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "response values: "<< response << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calculate_resids(predictions,response);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
