// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// update_grow_obs_DeepState_TestHarness_generation.cpp and update_grow_obs_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix update_grow_obs(NumericMatrix prior_tree_matrix_temp, double grow_node, double left_daughter, int d, NumericVector ld_obs, NumericVector rd_obs);

TEST(bartBMA_deepstate_test,update_grow_obs_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix prior_tree_matrix_temp  = RcppDeepState_NumericMatrix();
  std::string prior_tree_matrix_temp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_grow_obs/libFuzzer_update_grow_obs/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prior_tree_matrix_temp.qs";
  qs::c_qsave(prior_tree_matrix_temp,prior_tree_matrix_temp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_tree_matrix_temp values: "<< prior_tree_matrix_temp << std::endl;
  NumericVector grow_node(1);
  grow_node[0]  = RcppDeepState_double();
  std::string grow_node_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_grow_obs/libFuzzer_update_grow_obs/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_grow_node.qs";
  qs::c_qsave(grow_node,grow_node_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "grow_node values: "<< grow_node << std::endl;
  NumericVector left_daughter(1);
  left_daughter[0]  = RcppDeepState_double();
  std::string left_daughter_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_grow_obs/libFuzzer_update_grow_obs/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_left_daughter.qs";
  qs::c_qsave(left_daughter,left_daughter_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "left_daughter values: "<< left_daughter << std::endl;
  IntegerVector d(1);
  d[0]  = RcppDeepState_int();
  std::string d_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_grow_obs/libFuzzer_update_grow_obs/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_d.qs";
  qs::c_qsave(d,d_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "d values: "<< d << std::endl;
  NumericVector ld_obs  = RcppDeepState_NumericVector();
  std::string ld_obs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_grow_obs/libFuzzer_update_grow_obs/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ld_obs.qs";
  qs::c_qsave(ld_obs,ld_obs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ld_obs values: "<< ld_obs << std::endl;
  NumericVector rd_obs  = RcppDeepState_NumericVector();
  std::string rd_obs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_grow_obs/libFuzzer_update_grow_obs/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_rd_obs.qs";
  qs::c_qsave(rd_obs,rd_obs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "rd_obs values: "<< rd_obs << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    update_grow_obs(prior_tree_matrix_temp,grow_node[0],left_daughter[0],d[0],ld_obs,rd_obs);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
