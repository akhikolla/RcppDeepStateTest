// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// get_original_DeepState_TestHarness_generation.cpp and get_original_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector get_original(double low, double high, double sp_low, double sp_high, NumericVector sum_preds);

TEST(bartBMA_deepstate_test,get_original_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector low(1);
  low[0]  = RcppDeepState_double();
  std::string low_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original/libFuzzer_get_original/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_low.qs";
  qs::c_qsave(low,low_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "low values: "<< low << std::endl;
  NumericVector high(1);
  high[0]  = RcppDeepState_double();
  std::string high_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original/libFuzzer_get_original/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_high.qs";
  qs::c_qsave(high,high_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "high values: "<< high << std::endl;
  NumericVector sp_low(1);
  sp_low[0]  = RcppDeepState_double();
  std::string sp_low_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original/libFuzzer_get_original/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sp_low.qs";
  qs::c_qsave(sp_low,sp_low_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sp_low values: "<< sp_low << std::endl;
  NumericVector sp_high(1);
  sp_high[0]  = RcppDeepState_double();
  std::string sp_high_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original/libFuzzer_get_original/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sp_high.qs";
  qs::c_qsave(sp_high,sp_high_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sp_high values: "<< sp_high << std::endl;
  NumericVector sum_preds  = RcppDeepState_NumericVector();
  std::string sum_preds_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/get_original/libFuzzer_get_original/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sum_preds.qs";
  qs::c_qsave(sum_preds,sum_preds_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sum_preds values: "<< sum_preds << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    get_original(low[0],high[0],sp_low[0],sp_high[0],sum_preds);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
