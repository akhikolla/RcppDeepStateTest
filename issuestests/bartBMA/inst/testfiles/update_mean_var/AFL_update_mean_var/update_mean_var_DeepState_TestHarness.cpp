// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// update_mean_var_DeepState_TestHarness_generation.cpp and update_mean_var_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector update_mean_var(NumericMatrix tree_table, NumericMatrix tree_matrix, NumericVector resids, double a);

TEST(bartBMA_deepstate_test,update_mean_var_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix tree_table  = RcppDeepState_NumericMatrix();
  std::string tree_table_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_mean_var/AFL_update_mean_var/afl_inputs/" + std::to_string(t) + "_tree_table.qs";
  qs::c_qsave(tree_table,tree_table_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tree_table values: "<< tree_table << std::endl;
  NumericMatrix tree_matrix  = RcppDeepState_NumericMatrix();
  std::string tree_matrix_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_mean_var/AFL_update_mean_var/afl_inputs/" + std::to_string(t) + "_tree_matrix.qs";
  qs::c_qsave(tree_matrix,tree_matrix_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tree_matrix values: "<< tree_matrix << std::endl;
  NumericVector resids  = RcppDeepState_NumericVector();
  std::string resids_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_mean_var/AFL_update_mean_var/afl_inputs/" + std::to_string(t) + "_resids.qs";
  qs::c_qsave(resids,resids_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "resids values: "<< resids << std::endl;
  NumericVector a(1);
  a[0]  = RcppDeepState_double();
  std::string a_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/update_mean_var/AFL_update_mean_var/afl_inputs/" + std::to_string(t) + "_a.qs";
  qs::c_qsave(a,a_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "a values: "<< a << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    update_mean_var(tree_table,tree_matrix,resids,a[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
