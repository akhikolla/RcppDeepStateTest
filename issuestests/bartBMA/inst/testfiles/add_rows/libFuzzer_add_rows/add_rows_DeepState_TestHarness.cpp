// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// add_rows_DeepState_TestHarness_generation.cpp and add_rows_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix add_rows(NumericMatrix prior_tree_table_temp, int grow_node);

TEST(bartBMA_deepstate_test,add_rows_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix prior_tree_table_temp  = RcppDeepState_NumericMatrix();
  std::string prior_tree_table_temp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/add_rows/libFuzzer_add_rows/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_prior_tree_table_temp.qs";
  qs::c_qsave(prior_tree_table_temp,prior_tree_table_temp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prior_tree_table_temp values: "<< prior_tree_table_temp << std::endl;
  IntegerVector grow_node(1);
  grow_node[0]  = RcppDeepState_int();
  std::string grow_node_t = "/home/akhila/fuzzer_packages/fuzzedpackages/bartBMA/inst/testfiles/add_rows/libFuzzer_add_rows/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_grow_node.qs";
  qs::c_qsave(grow_node,grow_node_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "grow_node values: "<< grow_node << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    add_rows(prior_tree_table_temp,grow_node[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
