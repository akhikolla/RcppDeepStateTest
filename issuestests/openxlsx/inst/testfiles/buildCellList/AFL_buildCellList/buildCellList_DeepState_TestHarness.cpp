// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// buildCellList_DeepState_TestHarness_generation.cpp and buildCellList_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List buildCellList(CharacterVector r, CharacterVector t, CharacterVector v);

TEST(openxlsx_deepstate_test,buildCellList_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  CharacterVector r  = RcppDeepState_CharacterVector();
  std::string r_t = "/home/akhila/fuzzer_packages/fuzzedpackages/openxlsx/inst/testfiles/buildCellList/AFL_buildCellList/afl_inputs/" + std::to_string(t) + "_r.qs";
  qs::c_qsave(r,r_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "r values: "<< r << std::endl;
  CharacterVector t  = RcppDeepState_CharacterVector();
  std::string t_t = "/home/akhila/fuzzer_packages/fuzzedpackages/openxlsx/inst/testfiles/buildCellList/AFL_buildCellList/afl_inputs/" + std::to_string(t) + "_t.qs";
  qs::c_qsave(t,t_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "t values: "<< t << std::endl;
  CharacterVector v  = RcppDeepState_CharacterVector();
  std::string v_t = "/home/akhila/fuzzer_packages/fuzzedpackages/openxlsx/inst/testfiles/buildCellList/AFL_buildCellList/afl_inputs/" + std::to_string(t) + "_v.qs";
  qs::c_qsave(v,v_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "v values: "<< v << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    buildCellList(r,t,v);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
