// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// bsplineCpp_DeepState_TestHarness_generation.cpp and bsplineCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector bsplineCpp(NumericVector xs, int ord, NumericVector kns, NumericVector coef);

TEST(ibs_deepstate_test,bsplineCpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector xs  = RcppDeepState_NumericVector();
  std::string xs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ibs/inst/testfiles/bsplineCpp/AFL_bsplineCpp/afl_inputs/" + std::to_string(t) + "_xs.qs";
  qs::c_qsave(xs,xs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xs values: "<< xs << std::endl;
  IntegerVector ord(1);
  ord[0]  = RcppDeepState_int();
  std::string ord_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ibs/inst/testfiles/bsplineCpp/AFL_bsplineCpp/afl_inputs/" + std::to_string(t) + "_ord.qs";
  qs::c_qsave(ord,ord_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ord values: "<< ord << std::endl;
  NumericVector kns  = RcppDeepState_NumericVector();
  std::string kns_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ibs/inst/testfiles/bsplineCpp/AFL_bsplineCpp/afl_inputs/" + std::to_string(t) + "_kns.qs";
  qs::c_qsave(kns,kns_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "kns values: "<< kns << std::endl;
  NumericVector coef  = RcppDeepState_NumericVector();
  std::string coef_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ibs/inst/testfiles/bsplineCpp/AFL_bsplineCpp/afl_inputs/" + std::to_string(t) + "_coef.qs";
  qs::c_qsave(coef,coef_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "coef values: "<< coef << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    bsplineCpp(xs,ord[0],kns,coef);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
