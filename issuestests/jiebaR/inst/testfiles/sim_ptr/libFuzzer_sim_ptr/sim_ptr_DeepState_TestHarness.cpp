// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// sim_ptr_DeepState_TestHarness_generation.cpp and sim_ptr_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

XPtr<sim> sim_ptr(string dict, string model, string idf, string stop, string user);

TEST(jiebaR_deepstate_test,sim_ptr_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  string dict  = RcppDeepState_string();
  std::string dict_t = "/home/akhila/fuzzer_packages/fuzzedpackages/jiebaR/inst/testfiles/sim_ptr/libFuzzer_sim_ptr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_dict.qs";
  qs::c_qsave(dict,dict_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dict values: "<< dict << std::endl;
  string model  = RcppDeepState_string();
  std::string model_t = "/home/akhila/fuzzer_packages/fuzzedpackages/jiebaR/inst/testfiles/sim_ptr/libFuzzer_sim_ptr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_model.qs";
  qs::c_qsave(model,model_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "model values: "<< model << std::endl;
  string idf  = RcppDeepState_string();
  std::string idf_t = "/home/akhila/fuzzer_packages/fuzzedpackages/jiebaR/inst/testfiles/sim_ptr/libFuzzer_sim_ptr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_idf.qs";
  qs::c_qsave(idf,idf_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "idf values: "<< idf << std::endl;
  string stop  = RcppDeepState_string();
  std::string stop_t = "/home/akhila/fuzzer_packages/fuzzedpackages/jiebaR/inst/testfiles/sim_ptr/libFuzzer_sim_ptr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_stop.qs";
  qs::c_qsave(stop,stop_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "stop values: "<< stop << std::endl;
  string user  = RcppDeepState_string();
  std::string user_t = "/home/akhila/fuzzer_packages/fuzzedpackages/jiebaR/inst/testfiles/sim_ptr/libFuzzer_sim_ptr/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_user.qs";
  qs::c_qsave(user,user_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "user values: "<< user << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    sim_ptr(dict,model,idf,stop,user);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
