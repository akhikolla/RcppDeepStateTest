// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Hvec_DeepState_TestHarness_generation.cpp and Hvec_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

double Hvec(IntegerVector s, NumericVector Theta, int N);

TEST(IsingSampler_deepstate_test,Hvec_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector s  = RcppDeepState_IntegerVector();
  std::string s_t = "/home/akhila/fuzzer_packages/fuzzedpackages/IsingSampler/inst/testfiles/Hvec/AFL_Hvec/afl_inputs/" + std::to_string(t) + "_s.qs";
  qs::c_qsave(s,s_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "s values: "<< s << std::endl;
  NumericVector Theta  = RcppDeepState_NumericVector();
  std::string Theta_t = "/home/akhila/fuzzer_packages/fuzzedpackages/IsingSampler/inst/testfiles/Hvec/AFL_Hvec/afl_inputs/" + std::to_string(t) + "_Theta.qs";
  qs::c_qsave(Theta,Theta_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Theta values: "<< Theta << std::endl;
  IntegerVector N(1);
  N[0]  = RcppDeepState_int();
  std::string N_t = "/home/akhila/fuzzer_packages/fuzzedpackages/IsingSampler/inst/testfiles/Hvec/AFL_Hvec/afl_inputs/" + std::to_string(t) + "_N.qs";
  qs::c_qsave(N,N_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "N values: "<< N << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Hvec(s,Theta,N[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
