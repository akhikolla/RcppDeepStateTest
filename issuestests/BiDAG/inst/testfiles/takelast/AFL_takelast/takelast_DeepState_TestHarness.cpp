// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// takelast_DeepState_TestHarness_generation.cpp and takelast_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector takelast(NumericVector xs, int pos, int n);

TEST(BiDAG_deepstate_test,takelast_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector xs  = RcppDeepState_NumericVector();
  std::string xs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BiDAG/inst/testfiles/takelast/AFL_takelast/afl_inputs/" + std::to_string(t) + "_xs.qs";
  qs::c_qsave(xs,xs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xs values: "<< xs << std::endl;
  IntegerVector pos(1);
  pos[0]  = RcppDeepState_int();
  std::string pos_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BiDAG/inst/testfiles/takelast/AFL_takelast/afl_inputs/" + std::to_string(t) + "_pos.qs";
  qs::c_qsave(pos,pos_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "pos values: "<< pos << std::endl;
  IntegerVector n(1);
  n[0]  = RcppDeepState_int();
  std::string n_t = "/home/akhila/fuzzer_packages/fuzzedpackages/BiDAG/inst/testfiles/takelast/AFL_takelast/afl_inputs/" + std::to_string(t) + "_n.qs";
  qs::c_qsave(n,n_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "n values: "<< n << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    takelast(xs,pos[0],n[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
