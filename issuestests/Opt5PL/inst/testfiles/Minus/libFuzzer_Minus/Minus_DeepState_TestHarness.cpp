// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Minus_DeepState_TestHarness_generation.cpp and Minus_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix Minus(NumericMatrix M1, NumericMatrix M2);

TEST(Opt5PL_deepstate_test,Minus_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix M1  = RcppDeepState_NumericMatrix();
  std::string M1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Opt5PL/inst/testfiles/Minus/libFuzzer_Minus/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_M1.qs";
  qs::c_qsave(M1,M1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M1 values: "<< M1 << std::endl;
  NumericMatrix M2  = RcppDeepState_NumericMatrix();
  std::string M2_t = "/home/akhila/fuzzer_packages/fuzzedpackages/Opt5PL/inst/testfiles/Minus/libFuzzer_Minus/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_M2.qs";
  qs::c_qsave(M2,M2_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "M2 values: "<< M2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Minus(M1,M2);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
