// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fast_sim_DeepState_TestHarness_generation.cpp and fast_sim_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector fast_sim(NumericVector prot, NumericMatrix mat);

TEST(imp4p_deepstate_test,fast_sim_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector prot  = RcppDeepState_NumericVector();
  std::string prot_t = "/home/akhila/fuzzer_packages/fuzzedpackages/imp4p/inst/testfiles/fast_sim/AFL_fast_sim/afl_inputs/" + std::to_string(t) + "_prot.qs";
  qs::c_qsave(prot,prot_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "prot values: "<< prot << std::endl;
  NumericMatrix mat  = RcppDeepState_NumericMatrix();
  std::string mat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/imp4p/inst/testfiles/fast_sim/AFL_fast_sim/afl_inputs/" + std::to_string(t) + "_mat.qs";
  qs::c_qsave(mat,mat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mat values: "<< mat << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fast_sim(prot,mat);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
