// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// mat_comp_surv_cpp_DeepState_TestHarness_generation.cpp and mat_comp_surv_cpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix mat_comp_surv_cpp(NumericVector time1, NumericVector event1, NumericVector time0, NumericVector event0);

TEST(WinRatio_deepstate_test,mat_comp_surv_cpp_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector time1  = RcppDeepState_NumericVector();
  std::string time1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/WinRatio/inst/testfiles/mat_comp_surv_cpp/libFuzzer_mat_comp_surv_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_time1.qs";
  qs::c_qsave(time1,time1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time1 values: "<< time1 << std::endl;
  NumericVector event1  = RcppDeepState_NumericVector();
  std::string event1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/WinRatio/inst/testfiles/mat_comp_surv_cpp/libFuzzer_mat_comp_surv_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_event1.qs";
  qs::c_qsave(event1,event1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "event1 values: "<< event1 << std::endl;
  NumericVector time0  = RcppDeepState_NumericVector();
  std::string time0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/WinRatio/inst/testfiles/mat_comp_surv_cpp/libFuzzer_mat_comp_surv_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_time0.qs";
  qs::c_qsave(time0,time0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "time0 values: "<< time0 << std::endl;
  NumericVector event0  = RcppDeepState_NumericVector();
  std::string event0_t = "/home/akhila/fuzzer_packages/fuzzedpackages/WinRatio/inst/testfiles/mat_comp_surv_cpp/libFuzzer_mat_comp_surv_cpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_event0.qs";
  qs::c_qsave(event0,event0_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "event0 values: "<< event0 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    mat_comp_surv_cpp(time1,event1,time0,event0);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
