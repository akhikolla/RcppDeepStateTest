// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// interpolateLinearGrid_DeepState_TestHarness_generation.cpp and interpolateLinearGrid_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

void interpolateLinearGrid(NumericVector xseq, NumericVector yseq, NumericMatrix tempmat_sky, NumericMatrix output);

TEST(ProFound_deepstate_test,interpolateLinearGrid_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector xseq  = RcppDeepState_NumericVector();
  std::string xseq_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ProFound/inst/testfiles/interpolateLinearGrid/libFuzzer_interpolateLinearGrid/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_xseq.qs";
  qs::c_qsave(xseq,xseq_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "xseq values: "<< xseq << std::endl;
  NumericVector yseq  = RcppDeepState_NumericVector();
  std::string yseq_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ProFound/inst/testfiles/interpolateLinearGrid/libFuzzer_interpolateLinearGrid/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_yseq.qs";
  qs::c_qsave(yseq,yseq_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "yseq values: "<< yseq << std::endl;
  NumericMatrix tempmat_sky  = RcppDeepState_NumericMatrix();
  std::string tempmat_sky_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ProFound/inst/testfiles/interpolateLinearGrid/libFuzzer_interpolateLinearGrid/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tempmat_sky.qs";
  qs::c_qsave(tempmat_sky,tempmat_sky_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tempmat_sky values: "<< tempmat_sky << std::endl;
  NumericMatrix output  = RcppDeepState_NumericMatrix();
  std::string output_t = "/home/akhila/fuzzer_packages/fuzzedpackages/ProFound/inst/testfiles/interpolateLinearGrid/libFuzzer_interpolateLinearGrid/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_output.qs";
  qs::c_qsave(output,output_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "output values: "<< output << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    interpolateLinearGrid(xseq,yseq,tempmat_sky,output);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
