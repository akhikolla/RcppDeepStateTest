// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// glbWCcpp_DeepState_TestHarness_generation.cpp and glbWCcpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List glbWCcpp(IntegerVector hsum, NumericMatrix af, NumericVector indtyp);

TEST(diveRsity_deepstate_test,glbWCcpp_test){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector hsum  = RcppDeepState_IntegerVector();
  std::string hsum_t = "/home/akhila/fuzzer_packages/fuzzedpackages/diveRsity/inst/testfiles/glbWCcpp/AFL_glbWCcpp/afl_inputs/" + std::to_string(t) + "_hsum.qs";
  qs::c_qsave(hsum,hsum_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "hsum values: "<< hsum << std::endl;
  NumericMatrix af  = RcppDeepState_NumericMatrix();
  std::string af_t = "/home/akhila/fuzzer_packages/fuzzedpackages/diveRsity/inst/testfiles/glbWCcpp/AFL_glbWCcpp/afl_inputs/" + std::to_string(t) + "_af.qs";
  qs::c_qsave(af,af_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "af values: "<< af << std::endl;
  NumericVector indtyp  = RcppDeepState_NumericVector();
  std::string indtyp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/diveRsity/inst/testfiles/glbWCcpp/AFL_glbWCcpp/afl_inputs/" + std::to_string(t) + "_indtyp.qs";
  qs::c_qsave(indtyp,indtyp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "indtyp values: "<< indtyp << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    glbWCcpp(hsum,af,indtyp);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
