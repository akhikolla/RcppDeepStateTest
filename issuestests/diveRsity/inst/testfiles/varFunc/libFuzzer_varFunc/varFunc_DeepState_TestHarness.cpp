// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// varFunc_DeepState_TestHarness_generation.cpp and varFunc_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List varFunc(NumericMatrix af, double sHarm);

TEST(diveRsity_deepstate_test,varFunc_test){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix af  = RcppDeepState_NumericMatrix();
  std::string af_t = "/home/akhila/fuzzer_packages/fuzzedpackages/diveRsity/inst/testfiles/varFunc/libFuzzer_varFunc/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_af.qs";
  qs::c_qsave(af,af_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "af values: "<< af << std::endl;
  NumericVector sHarm(1);
  sHarm[0]  = RcppDeepState_double();
  std::string sHarm_t = "/home/akhila/fuzzer_packages/fuzzedpackages/diveRsity/inst/testfiles/varFunc/libFuzzer_varFunc/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sHarm.qs";
  qs::c_qsave(sHarm,sHarm_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sHarm values: "<< sHarm << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    varFunc(af,sHarm[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
