// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// AnIn1
double AnIn1(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnIn1(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnIn1(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnIn2
double AnIn2(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnIn2(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnIn2(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnIn3
double AnIn3(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnIn3(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnIn3(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnIn4
double AnIn4(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnIn4(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnIn4(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnIn5
double AnIn5(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnIn5(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnIn5(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnIn6
double AnIn6(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnIn6(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnIn6(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnIn7
double AnIn7(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnIn7(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnIn7(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnIn8
double AnIn8(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnIn8(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnIn8(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnInQ1
double AnInQ1(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnInQ1(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnInQ1(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnInQ2
double AnInQ2(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnInQ2(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnInQ2(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnInQ3
double AnInQ3(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnInQ3(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnInQ3(knot));
    return rcpp_result_gen;
END_RCPP
}
// AnInQ4
double AnInQ4(NumericVector knot);
RcppExport SEXP _bsplinePsd_AnInQ4(SEXP knotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type knot(knotSEXP);
    rcpp_result_gen = Rcpp::wrap(AnInQ4(knot));
    return rcpp_result_gen;
END_RCPP
}
// pFromV
NumericVector pFromV(NumericVector v);
RcppExport SEXP _bsplinePsd_pFromV(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(pFromV(v));
    return rcpp_result_gen;
END_RCPP
}
// vFromP
NumericVector vFromP(NumericVector p, const double eps);
RcppExport SEXP _bsplinePsd_vFromP(SEXP pSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(vFromP(p, eps));
    return rcpp_result_gen;
END_RCPP
}
// mixtureWeight
NumericVector mixtureWeight(NumericVector p, NumericVector w, unsigned k);
RcppExport SEXP _bsplinePsd_mixtureWeight(SEXP pSEXP, SEXP wSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< unsigned >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mixtureWeight(p, w, k));
    return rcpp_result_gen;
END_RCPP
}
// densityMixture
NumericVector densityMixture(NumericVector weights, NumericMatrix densities);
RcppExport SEXP _bsplinePsd_densityMixture(SEXP weightsSEXP, SEXP densitiesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type densities(densitiesSEXP);
    rcpp_result_gen = Rcpp::wrap(densityMixture(weights, densities));
    return rcpp_result_gen;
END_RCPP
}
// unrollPsd
NumericVector unrollPsd(NumericVector qPsd, unsigned n);
RcppExport SEXP _bsplinePsd_unrollPsd(SEXP qPsdSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type qPsd(qPsdSEXP);
    Rcpp::traits::input_parameter< unsigned >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(unrollPsd(qPsd, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bsplinePsd_AnIn1", (DL_FUNC) &_bsplinePsd_AnIn1, 1},
    {"_bsplinePsd_AnIn2", (DL_FUNC) &_bsplinePsd_AnIn2, 1},
    {"_bsplinePsd_AnIn3", (DL_FUNC) &_bsplinePsd_AnIn3, 1},
    {"_bsplinePsd_AnIn4", (DL_FUNC) &_bsplinePsd_AnIn4, 1},
    {"_bsplinePsd_AnIn5", (DL_FUNC) &_bsplinePsd_AnIn5, 1},
    {"_bsplinePsd_AnIn6", (DL_FUNC) &_bsplinePsd_AnIn6, 1},
    {"_bsplinePsd_AnIn7", (DL_FUNC) &_bsplinePsd_AnIn7, 1},
    {"_bsplinePsd_AnIn8", (DL_FUNC) &_bsplinePsd_AnIn8, 1},
    {"_bsplinePsd_AnInQ1", (DL_FUNC) &_bsplinePsd_AnInQ1, 1},
    {"_bsplinePsd_AnInQ2", (DL_FUNC) &_bsplinePsd_AnInQ2, 1},
    {"_bsplinePsd_AnInQ3", (DL_FUNC) &_bsplinePsd_AnInQ3, 1},
    {"_bsplinePsd_AnInQ4", (DL_FUNC) &_bsplinePsd_AnInQ4, 1},
    {"_bsplinePsd_pFromV", (DL_FUNC) &_bsplinePsd_pFromV, 1},
    {"_bsplinePsd_vFromP", (DL_FUNC) &_bsplinePsd_vFromP, 2},
    {"_bsplinePsd_mixtureWeight", (DL_FUNC) &_bsplinePsd_mixtureWeight, 3},
    {"_bsplinePsd_densityMixture", (DL_FUNC) &_bsplinePsd_densityMixture, 2},
    {"_bsplinePsd_unrollPsd", (DL_FUNC) &_bsplinePsd_unrollPsd, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_bsplinePsd(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
