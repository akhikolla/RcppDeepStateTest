// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// kernelC
double kernelC(arma::rowvec x, arma::rowvec y, double theta, double tau);
RcppExport SEXP _BAREB_kernelC(SEXP xSEXP, SEXP ySEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(kernelC(x, y, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// updateC
arma::mat updateC(arma::mat Z, double theta, double tau);
RcppExport SEXP _BAREB_updateC(SEXP ZSEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(updateC(Z, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// updateBeta
List updateBeta(arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat Beta, arma::cube Gamma, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mustar, arma::mat mu, double sigma, arma::rowvec c, arma::mat C, arma::mat step, arma::mat runif, int n, int m, int T0, int p, int q, arma::mat D, double theta, double tau);
RcppExport SEXP _BAREB_updateBeta(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP BetaSEXP, SEXP GammaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP mustarSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP cSEXP, SEXP CSEXP, SEXP stepSEXP, SEXP runifSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mustar(mustarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type step(stepSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type runif(runifSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(updateBeta(X, Y, Z, delta, Beta, Gamma, E, R, S, Ds, mustar, mu, sigma, c, C, step, runif, n, m, T0, p, q, D, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// updateGamma
List updateGamma(arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat Beta, arma::cube Gamma, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mu, arma::mat mustar, double sigma, arma::rowvec c, arma::cube step, arma::cube runif, int n, int m, int T0, int p, int q, arma::mat D, double theta, double tau);
RcppExport SEXP _BAREB_updateGamma(SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP BetaSEXP, SEXP GammaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP muSEXP, SEXP mustarSEXP, SEXP sigmaSEXP, SEXP cSEXP, SEXP stepSEXP, SEXP runifSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP, SEXP thetaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mustar(mustarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type step(stepSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type runif(runifSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(updateGamma(X, Y, Z, delta, Beta, Gamma, E, R, S, Ds, mu, mustar, sigma, c, step, runif, n, m, T0, p, q, D, theta, tau));
    return rcpp_result_gen;
END_RCPP
}
// updateE
List updateE(arma::mat Beta, arma::cube Gamma, arma::rowvec w, arma::mat X, arma::mat Y, arma::mat Z, arma::mat delta, arma::rowvec E, arma::mat R, double S, arma::rowvec Ds, arma::mat mu, arma::mat mustar, double sigma, arma::rowvec c, int n, int m, int T0, int p, int q, arma::mat D);
RcppExport SEXP _BAREB_updateE(SEXP BetaSEXP, SEXP GammaSEXP, SEXP wSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP ESEXP, SEXP RSEXP, SEXP SSEXP, SEXP DsSEXP, SEXP muSEXP, SEXP mustarSEXP, SEXP sigmaSEXP, SEXP cSEXP, SEXP nSEXP, SEXP mSEXP, SEXP T0SEXP, SEXP pSEXP, SEXP qSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Ds(DsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mustar(mustarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(updateE(Beta, Gamma, w, X, Y, Z, delta, E, R, S, Ds, mu, mustar, sigma, c, n, m, T0, p, q, D));
    return rcpp_result_gen;
END_RCPP
}
// updatemu
arma::mat updatemu(arma::mat R, arma::mat Z, arma::mat X, arma::cube Gamma, arma::rowvec K, arma::mat Beta, arma::rowvec E, int m, int n, int p, int q);
RcppExport SEXP _BAREB_updatemu(SEXP RSEXP, SEXP ZSEXP, SEXP XSEXP, SEXP GammaSEXP, SEXP KSEXP, SEXP BetaSEXP, SEXP ESEXP, SEXP mSEXP, SEXP nSEXP, SEXP pSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(updatemu(R, Z, X, Gamma, K, Beta, E, m, n, p, q));
    return rcpp_result_gen;
END_RCPP
}
// RJi
List RJi(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec Beta, arma::mat X, arma::mat Y, arma::mat Z, arma::rowvec R, arma::mat delta, arma::rowvec mu, arma::mat mu_star, double c, double sigma_square, arma::mat C, double theta, double tau, int m, int n, int q, int T0, double hyper_delta);
RcppExport SEXP _BAREB_RJi(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP XSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP RSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP mu_starSEXP, SEXP cSEXP, SEXP sigma_squareSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP T0SEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_star(mu_starSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(RJi(w, K, Gamma, Beta, X, Y, Z, R, delta, mu, mu_star, c, sigma_square, C, theta, tau, m, n, q, T0, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}
// updateR
arma::mat updateR(arma::mat w, arma::cube Gamma, arma::mat Beta, arma::mat Y, arma::mat Z, arma::mat delta, arma::mat mu, arma::mat mu_star, double c, int S, double sigma_square, arma::rowvec K, arma::rowvec E, arma::mat X, int m, int n, int q, int p, int T0);
RcppExport SEXP _BAREB_updateR(SEXP wSEXP, SEXP GammaSEXP, SEXP BetaSEXP, SEXP YSEXP, SEXP ZSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP mu_starSEXP, SEXP cSEXP, SEXP SSEXP, SEXP sigma_squareSEXP, SEXP KSEXP, SEXP ESEXP, SEXP XSEXP, SEXP mSEXP, SEXP nSEXP, SEXP qSEXP, SEXP pSEXP, SEXP T0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type w(wSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_star(mu_starSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type E(ESEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    rcpp_result_gen = Rcpp::wrap(updateR(w, Gamma, Beta, Y, Z, delta, mu, mu_star, c, S, sigma_square, K, E, X, m, n, q, p, T0));
    return rcpp_result_gen;
END_RCPP
}
// updatemustar
arma::mat updatemustar(arma::mat mu, arma::rowvec c, int n, int T0, arma::mat D);
RcppExport SEXP _BAREB_updatemustar(SEXP muSEXP, SEXP cSEXP, SEXP nSEXP, SEXP T0SEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(updatemustar(mu, c, n, T0, D));
    return rcpp_result_gen;
END_RCPP
}
// updateZstar
arma::mat updateZstar(arma::mat mu_star, arma::mat delta, int n, int T0);
RcppExport SEXP _BAREB_updateZstar(SEXP mu_starSEXP, SEXP deltaSEXP, SEXP nSEXP, SEXP T0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mu_star(mu_starSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    rcpp_result_gen = Rcpp::wrap(updateZstar(mu_star, delta, n, T0));
    return rcpp_result_gen;
END_RCPP
}
// updatec
arma::rowvec updatec(arma::mat Zstar, arma::mat mu, arma::mat D, double sigmac, double sigma_square, int n, int T0);
RcppExport SEXP _BAREB_updatec(SEXP ZstarSEXP, SEXP muSEXP, SEXP DSEXP, SEXP sigmacSEXP, SEXP sigma_squareSEXP, SEXP nSEXP, SEXP T0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Zstar(ZstarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< double >::type sigmac(sigmacSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_square(sigma_squareSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type T0(T0SEXP);
    rcpp_result_gen = Rcpp::wrap(updatec(Zstar, mu, D, sigmac, sigma_square, n, T0));
    return rcpp_result_gen;
END_RCPP
}
// RJi_empty
List RJi_empty(arma::rowvec w, int K, arma::mat Gamma, arma::rowvec R, arma::mat C, double theta, double tau, int m, int q, double hyper_delta);
RcppExport SEXP _BAREB_RJi_empty(SEXP wSEXP, SEXP KSEXP, SEXP GammaSEXP, SEXP RSEXP, SEXP CSEXP, SEXP thetaSEXP, SEXP tauSEXP, SEXP mSEXP, SEXP qSEXP, SEXP hyper_deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type hyper_delta(hyper_deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(RJi_empty(w, K, Gamma, R, C, theta, tau, m, q, hyper_delta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BAREB_kernelC", (DL_FUNC) &_BAREB_kernelC, 4},
    {"_BAREB_updateC", (DL_FUNC) &_BAREB_updateC, 3},
    {"_BAREB_updateBeta", (DL_FUNC) &_BAREB_updateBeta, 25},
    {"_BAREB_updateGamma", (DL_FUNC) &_BAREB_updateGamma, 24},
    {"_BAREB_updateE", (DL_FUNC) &_BAREB_updateE, 21},
    {"_BAREB_updatemu", (DL_FUNC) &_BAREB_updatemu, 11},
    {"_BAREB_RJi", (DL_FUNC) &_BAREB_RJi, 21},
    {"_BAREB_updateR", (DL_FUNC) &_BAREB_updateR, 19},
    {"_BAREB_updatemustar", (DL_FUNC) &_BAREB_updatemustar, 5},
    {"_BAREB_updateZstar", (DL_FUNC) &_BAREB_updateZstar, 4},
    {"_BAREB_updatec", (DL_FUNC) &_BAREB_updatec, 7},
    {"_BAREB_RJi_empty", (DL_FUNC) &_BAREB_RJi_empty, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_BAREB(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
